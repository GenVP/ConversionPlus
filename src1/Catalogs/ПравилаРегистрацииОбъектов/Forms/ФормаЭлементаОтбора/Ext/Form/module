Перем мРезультатЗакрытияОкна;

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()
	
	ЭлементыФормы.ВидЭлементаОтбора.ВыбираемоеЗначение          = глЭлементОтбораСвойствоЗначениеКонстанты();
	ЭлементыФормы.ВидЭлементаОтбораВыражение.ВыбираемоеЗначение = глЭлементОтбораСвойствоАлгоритмЗначения();
	
	Если ЭтоПримитивныйТип Тогда
		
		ЭлементыФормы.ПолеВводаЗначенияКонстанты.ТипЗначения = Новый ОписаниеТипов(ТипЗначенияСтрокой);
		
	Иначе
		
		ЭлементыФормы.ПолеВводаЗначенияКонстанты.ТипЗначения = Новый ОписаниеТипов("Неопределено");
		
	КонецЕсли;
	
	ИмяОбработчика = "ПолеВыражения";
	
	Если ПустаяСтрока(ВидЭлементаОтбора) Тогда
		
		ВидЭлементаОтбора = глЭлементОтбораСвойствоЗначениеКонстанты();
		
	КонецЕсли;
	
	Если ВидЭлементаОтбора = глЭлементОтбораСвойствоЗначениеКонстанты() Тогда
		
		ЭлементыФормы.ПолеВводаЗначенияКонстанты.Значение = Результат;
		
	ИначеЕсли ВидЭлементаОтбора = глЭлементОтбораСвойствоАлгоритмЗначения() Тогда
		
		ЭлементыФормы[ИмяОбработчика].УстановитьТекст(Результат);
		
	КонецЕсли;
	
	Если ЭтоПримитивныйТип Тогда
		
		ЗаголовокПоля = НСтр("ru = 'Значение константы (ТипЗначенияСтрокой):'");
		ЗаголовокПоля = СтрЗаменить(ЗаголовокПоля, "ТипЗначенияСтрокой", ТипЗначенияСтрокой);
		
	Иначе
		
		ВидЭлементаОтбора = глЭлементОтбораСвойствоАлгоритмЗначения();
		
		ЭлементыФормы.ВидЭлементаОтбора.Доступность = Ложь;
		
		УстановитьТекстВПолеВыраженияПоУмолчанию();
		
		ЗаголовокПоля = НСтр("ru = 'Значение константы:'");
		
	КонецЕсли;
	
	УстановитьВидимостьДоступностьЭлементовФормы();
	
	ЭлементыФормы.ВидЭлементаОтбора.Заголовок = ЗаголовокПоля;
	
	мРезультатЗакрытияОкна = Неопределено;
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если мРезультатЗакрытияОкна <> Истина И Модифицированность Тогда
		
		Ответ = Вопрос(НСтр("ru = 'Данные формы были изменены. Закрыть форму?'"), РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Нет);
		
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			
			Отказ = Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
	мРезультатЗакрытияОкна = Неопределено;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ ФОРМЫ

Процедура ОсновныеДействияФормыКнопкаОК(Кнопка)
	
	Результат = Неопределено;
	
	Если ВидЭлементаОтбора = глЭлементОтбораСвойствоЗначениеКонстанты() Тогда
		
		Результат = ЭлементыФормы.ПолеВводаЗначенияКонстанты.Значение;
		
	ИначеЕсли ВидЭлементаОтбора = глЭлементОтбораСвойствоАлгоритмЗначения() Тогда
		
		Результат = ПолучитьТекстОбработчика("ПолеВыражения");
		
	КонецЕсли;
	
	мРезультатЗакрытияОкна = Истина;
	
	Закрыть(мРезультатЗакрытияОкна);
	
КонецПроцедуры

Процедура ОсновныеДействияФормыКнопкаОтмена(Кнопка)
	
	Закрыть();
	
КонецПроцедуры

Процедура ВидЭлементаОтбораПриИзменении(Элемент)
	
	УстановитьВидимостьДоступностьЭлементовФормы();
	
	УстановитьТекстВПолеВыраженияПоУмолчанию();
	
КонецПроцедуры

Процедура ИнформацияПоОбработчикамНажатие(Элемент)
	
	// вывод информации по обработчикам событий
	ОткрытьОписаниеОбработчиковСобытий("ПравилаРегистрацииОбъектов", "АлгоритмПолученияЗначения");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура УстановитьВидимостьДоступностьЭлементовФормы()
	
	ЭтоВыборЗначенияКонстанты = (ВидЭлементаОтбора = глЭлементОтбораСвойствоЗначениеКонстанты());
	
	ЭлементыФормы.ПолеВводаЗначенияКонстанты.Доступность = ЭтоВыборЗначенияКонстанты;
	ЭлементыФормы.ПолеВыражения.Доступность              = Не ЭтоВыборЗначенияКонстанты;
	
КонецПроцедуры

Процедура УстановитьТекстВПолеВыраженияПоУмолчанию()
	
	ИмяОбработчика = "ПолеВыражения";
	
	Если ВидЭлементаОтбора = глЭлементОтбораСвойствоАлгоритмЗначения()
		И ПустаяСтрока(ПолучитьТекстОбработчика(ИмяОбработчика)) Тогда
		
		ЭлементыФормы[ИмяОбработчика].УстановитьТекст(ЗначениеОбработчикаПоУмолчанию());
		
	ИначеЕсли ВидЭлементаОтбора = глЭлементОтбораСвойствоЗначениеКонстанты()
		И ПолучитьТекстОбработчика(ИмяОбработчика) = ЗначениеОбработчикаПоУмолчанию() Тогда
		
		ЭлементыФормы[ИмяОбработчика].УстановитьТекст("");
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьТекстОбработчика(ИмяОбработчика)
	
	Возврат ЭлементыФормы[ИмяОбработчика].ПолучитьТекст();
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ИНИЦИАЛИЗАЦИЯ МОДУЛЯ

////////////////////////////////////////////////////////////////////////////////
// ВНУТРЕННИЕ СВОЙСТВА И КОНСТАНТЫ МОДУЛЯ

Функция ЗначениеОбработчикаПоУмолчанию()
	
	Возврат "Значение = ;";
	
КонецФункции

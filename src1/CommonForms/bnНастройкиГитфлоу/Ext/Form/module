///////////////////////////////////////////////////////////////////////////////////////////////
// ОСНОВНЫЕ ДЕЙСТВИЯ ОБРАБОТКИ

Функция СохранитьДанные()
	
	ХранилищеОбщихНастроек.Сохранить("bnОкруглениеДатыВыгрузки", , ОкруглениеДатыВыгрузки);
	
	ОбновитьПовторноИспользуемыеЗначения();
	Модифицированность = Ложь;
	Возврат Истина;
	
КонецФункции

Процедура ОсновныеДействияФормыОК(Кнопка)
	
	СохранитьДанные();
	ЭтаФорма.Закрыть();
	
КонецПроцедуры

Процедура ПроверитьНеобходимостьИзмененияПорядкаОбъектов()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Конвертация", Конвертация);
	Запрос.Текст = ТекстЗапросаПровертаСбояПорядкаВыгрузки();
	РезультатЗапросаПакет = Запрос.ВыполнитьПакет();
	НеобходимоОбновление = ( НЕ РезультатЗапросаПакет[0].Пустой() ИЛИ НЕ РезультатЗапросаПакет[1].Пустой() );
	
	Индикатор = ЭлементыФормы.НадписьИндикацияКорректностиПорядка;
	
	Если НеобходимоОбновление Тогда
		
		Индикатор.Заголовок = НСтр("ru = 'Необходимо обновить порядок объектов'");
		Индикатор.ЦветТекста = WebЦвета.Красный;
		ЭлементыФормы.ОбновитьПорядок.Доступность = Истина;
		
	Иначе
		
		Индикатор.Заголовок = НСтр("ru = 'Корректировка порядка выгрузки не требуется'");
		Индикатор.ЦветТекста = WebЦвета.Зеленый;
		ЭлементыФормы.ОбновитьПорядок.Доступность = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьПорядокНажатие(Элемент)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Конвертация", Конвертация);
	
	Запрос.Текст = ТекстЗапроса_ПВД();
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ОбновитьПорядокВыгрузкиОбъектовПоПорядку("ПравилаВыгрузкиДанных", "правил выгрузки данных");
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса_ПОД();
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ОбновитьПорядокВыгрузкиОбъектовПоПорядку("ПравилаОчисткиДанных", "правил очистки данных");
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса_ПКО();
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ОбновитьПорядокВыгрузкиОбъектовПоПорядку("ПравилаКонвертацииОбъектов", "правил конвертации объектов");
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса_ПКЗ();
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ОбновитьПорядокВыгрузкиОбъектовПоПорядкуВладельцу("ПравилаКонвертацииЗначений", "правил конвертации значений");
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса_ПКС();
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ОбновитьПорядокВыгрузкиОбъектовПоПорядкуВладельцу("ПравилаКонвертацииСвойств", "правил конвертации свойств");
	КонецЕсли;
	
	ПроверитьНеобходимостьИзмененияПорядкаОбъектов();
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////////////////////
// УПРАВЛЕНИЕ ПОРЯДКОМ ВЫГРУЗКИ ОБЪЕКТОВ

Функция ТекстЗапроса_ПВД()
	
	Возврат
	"ВЫБРАТЬ
	|	ТаблицаОбъектов.Порядок,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаОбъектов.Ссылка)
	|ИЗ
	|	Справочник.ПравилаВыгрузкиДанных КАК ТаблицаОбъектов
	|ГДЕ
	|	ТаблицаОбъектов.Владелец = &Конвертация
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаОбъектов.Порядок
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаОбъектов.Ссылка) > 1
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаОбъектов.Ссылка,
	|	0
	|ИЗ
	|	Справочник.ПравилаВыгрузкиДанных КАК ТаблицаОбъектов
	|ГДЕ
	|	ТаблицаОбъектов.Порядок = 0
	|	И ТаблицаОбъектов.Владелец = &Конвертация";
	
КонецФункции

Функция ТекстЗапроса_ПОД()
	
	Возврат
	"ВЫБРАТЬ
	|	ТаблицаОбъектов.Порядок,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаОбъектов.Ссылка)
	|ИЗ
	|	Справочник.ПравилаОчисткиДанных КАК ТаблицаОбъектов
	|ГДЕ
	|	ТаблицаОбъектов.Владелец = &Конвертация
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаОбъектов.Порядок
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаОбъектов.Ссылка) > 1
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаОбъектов.Ссылка,
	|	0
	|ИЗ
	|	Справочник.ПравилаОчисткиДанных КАК ТаблицаОбъектов
	|ГДЕ
	|	ТаблицаОбъектов.Порядок = 0
	|	И ТаблицаОбъектов.Владелец = &Конвертация";
	
КонецФункции

Функция ТекстЗапроса_ПКО()
	
	Возврат
	"ВЫБРАТЬ
	|	ТаблицаОбъектов.Порядок,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаОбъектов.Ссылка)
	|ИЗ
	|	Справочник.ПравилаКонвертацииОбъектов КАК ТаблицаОбъектов
	|ГДЕ
	|	ТаблицаОбъектов.Владелец = &Конвертация
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаОбъектов.Порядок
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаОбъектов.Ссылка) > 1
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаОбъектов.Ссылка,
	|	0
	|ИЗ
	|	Справочник.ПравилаКонвертацииОбъектов КАК ТаблицаОбъектов
	|ГДЕ
	|	ТаблицаОбъектов.Порядок = 0
	|	И ТаблицаОбъектов.Владелец = &Конвертация";
	
КонецФункции

Функция ТекстЗапроса_ПКЗ()
	
	Возврат
	"ВЫБРАТЬ
	|	ТаблицаОбъектов.Владелец,
	|	ТаблицаОбъектов.Порядок,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаОбъектов.Ссылка)
	|ИЗ
	|	Справочник.ПравилаКонвертацииЗначений КАК ТаблицаОбъектов
	|ГДЕ
	|	ТаблицаОбъектов.Владелец.Владелец = &Конвертация
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаОбъектов.Владелец,
	|	ТаблицаОбъектов.Порядок
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаОбъектов.Ссылка) > 1
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаОбъектов.Ссылка,
	|	ТаблицаОбъектов.Ссылка,
	|	0
	|ИЗ
	|	Справочник.ПравилаКонвертацииЗначений КАК ТаблицаОбъектов
	|ГДЕ
	|	ТаблицаОбъектов.Владелец.Владелец = &Конвертация
	|	И ТаблицаОбъектов.Приемник = 0";
	
КонецФункции

Функция ТекстЗапроса_ПКС()
	
	Возврат
	"ВЫБРАТЬ
	|	ТаблицаОбъектов.Владелец,
	|	ТаблицаОбъектов.Порядок,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаОбъектов.Ссылка)
	|ИЗ
	|	Справочник.ПравилаКонвертацииСвойств КАК ТаблицаОбъектов
	|ГДЕ
	|	ТаблицаОбъектов.Владелец.Владелец = &Конвертация
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаОбъектов.Владелец,
	|	ТаблицаОбъектов.Порядок
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаОбъектов.Ссылка) > 1
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаОбъектов.Ссылка,
	|	ТаблицаОбъектов.Ссылка,
	|	0
	|ИЗ
	|	Справочник.ПравилаКонвертацииСвойств КАК ТаблицаОбъектов
	|ГДЕ
	|	ТаблицаОбъектов.Владелец.Владелец = &Конвертация
	|	И ТаблицаОбъектов.Владелец.Порядок = 0";
	
КонецФункции

Функция ТекстЗапросаПровертаСбояПорядкаВыгрузки()
	
	// ПВД (порядок)
	// ПОД (порядок)
	// ПКО (порядок)
	// - ПКС (порядок)
	// - ПКЗ (порядок)
	
	Возврат
	"" + ТекстЗапроса_ПВД() + "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|" + ТекстЗапроса_ПОД() + "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|" + ТекстЗапроса_ПКО() + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|" + ТекстЗапроса_ПКЗ() + "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|" + ТекстЗапроса_ПКС();
	
КонецФункции

Процедура ОбновитьПорядокВыгрузкиОбъектовПоПорядку(ИмяТаблицы, ИмяВСообщении)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Конвертация", Конвертация);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаОбъектов.Ссылка
	|ИЗ
	|	Справочник."+ИмяТаблицы+" КАК ТаблицаОбъектов
	|ГДЕ
	|	ТаблицаОбъектов.Владелец = &Конвертация
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОбъектов.Порядок";
	
	Выборка = Запрос.Выполнить().Выбрать();
	ТекНомер = 10;
	Сч = 1;
	Кол = Выборка.Количество();
	Пока Выборка.Следующий() Цикл
		
		Состояние("Обработка "+ИмяВСообщении+": " + Сч + " из " + Кол);
		
		ТекОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ТекОбъект.Порядок = ТекНомер;
		ТекОбъект.Записать();
		
		Сч = Сч + 1;
		ТекНомер = ТекНомер + 10;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбновитьПорядокВыгрузкиОбъектовПоПорядкуВладельцу(ИмяТаблицы, ИмяВСообщении)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Конвертация", Конвертация);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаОбъектов.Ссылка
	|ИЗ
	|	Справочник."+ИмяТаблицы+" КАК ТаблицаОбъектов
	|ГДЕ
	|	ТаблицаОбъектов.Владелец.Владелец = &Конвертация
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОбъектов.Порядок";
	
	Выборка = Запрос.Выполнить().Выбрать();
	ТекНомер = 10;
	Сч = 1;
	Кол = Выборка.Количество();
	Пока Выборка.Следующий() Цикл
		
		Состояние("Обработка "+ИмяВСообщении+": " + Сч + " из " + Кол);
		
		ТекОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ТекОбъект.Порядок = ТекНомер;
		ТекОбъект.Записать();
		
		Сч = Сч + 1;
		ТекНомер = ТекНомер + 10;
		
	КонецЦикла;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()
	
	ОкруглениеДатыВыгрузки = bnГитфлоуПовтИсп.ПолучитьЗначениеНастройки("bnОкруглениеДатыВыгрузки");
	
	ПроверитьНеобходимостьИзмененияПорядкаОбъектов();
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		Ответ = Вопрос(НСтр("ru = 'Данные были изменены. Сохранить изменения?'"), РежимДиалогаВопрос.ДаНетОтмена);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			Если НЕ СохранитьДанные() Тогда
				Отказ = Истина;
			КонецЕсли;
		ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

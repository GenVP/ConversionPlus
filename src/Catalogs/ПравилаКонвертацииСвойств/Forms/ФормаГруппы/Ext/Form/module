////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

//Вспомогательная переменная (массив) для хранения обработчиков
Перем мМассивОбработчиков;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПередОткрытием" формы.
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

    ОбъектИсточник = Владелец.Источник; 
	ОбъектПриемник = Владелец.Приемник;

	
	ОбновитьТипы();
	
	
	Если ЭтоГруппа Тогда
		//МассивТипов = Новый Массив;
		//МассивТипов.Добавить(Тип("СправочникСсылка.ПодчиненныеОбъекты"));
		//ОпределительТипа = Новый ОписаниеТипов(МассивТипов);
	Иначе
		МассивТипов = Новый Массив;
		МассивТипов.Добавить(Тип("СправочникСсылка.Свойства"));
		ОпределительТипа = Новый ОписаниеТипов(МассивТипов);
	КонецЕсли; 

	Источник = ОпределительТипа.ПривестиЗначение(Источник);
	Приемник = ОпределительТипа.ПривестиЗначение(Приемник);

КонецПроцедуры // ПередОткрытием()

// Процедура - обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии()

	ПолучитьАлгоритмыПриОткрытии(ЭтаФорма, ЭтотОбъект, мМассивОбработчиков);
	
	АктивизироватьСтраницуСобытия(ЭтотОбъект, мМассивОбработчиков, ЭлементыФормы.ПанельАлгоритмы, ЭлементыФормы);
	
	ЗаполнитьИмяОбработчика(ЭлементыФормы.ПанельАлгоритмы.ТекущаяСтраница);
	
	Если НЕ ЭтоПриложение8(Владелец.Владелец.Источник.Приложение) Или НЕ ЭтоПриложение8(Владелец.Владелец.Приемник.Приложение) Тогда
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Удалить(ЭлементыФормы.КоманднаяПанельФормы.Кнопки.ОтладкаОбработчиков);
	КонецЕсли;
	
КонецПроцедуры // ПриОткрытии()

// Процедура - обработчик события "ПередЗаписью" формы.
//
Процедура ПередЗаписью(Отказ)

	УстановитьАлгоритмыПередЗаписью(ЭтаФорма, ЭтотОбъект, мМассивОбработчиков);
	
КонецПроцедуры // ПередЗаписью()


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ

// Процедура - обработчик события "НачалоВыбора" поля ввода источника.
//
Процедура ИсточникНачалоВыбора(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

	Форма = Справочники.Свойства.ПолучитьФормуВыбора("ФормаВыбораГруппы", Элемент);
	Форма.НеИзменятьРодителя        = Истина;
	Форма.РодительОтбор             = Родитель.Источник;
	Форма.ПараметрОтборПоВладельцу  = Владелец.Источник;
	Форма.ПараметрВыборПоВладельцу  = Владелец.Источник;
	
	Форма.НачальноеЗначениеВыбора   = Элемент.Значение;

	Форма.Открыть();
	
КонецПроцедуры // ИсточникНачалоВыбора()

// Процедура - обработчик события "НачалоВыбора" поля ввода приемника.
//
Процедура ПриемникНачалоВыбора(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

	Форма = Справочники.Свойства.ПолучитьФормуВыбора("ФормаВыбораГруппы", Элемент);
	Форма.НеИзменятьРодителя        = Истина;
	Форма.РодительОтбор             = Родитель.Приемник;
	Форма.ПараметрОтборПоВладельцу  = Владелец.Приемник;
	Форма.ПараметрВыборПоВладельцу  = Владелец.Приемник;
	
	Форма.НачальноеЗначениеВыбора   = Элемент.Значение;

	Форма.Открыть();
	
КонецПроцедуры // ПриемникНачалоВыбора()

// Процедура - обработчик события "ПриИзменении" поля ввода источника.
//
Процедура ИсточникПриИзменении(Элемент)
	
    ОбновитьТипы();
	
	Наименование = глНаименованиеПКС(ЭтотОбъект);
	
КонецПроцедуры // ИсточникПриИзменении()

// Процедура - обработчик события "ПриИзменении" поля ввода приемника.
//
Процедура ПриемникПриИзменении(Элемент)

    ОбновитьТипы();
	
	Наименование = глНаименованиеПКС(ЭтотОбъект);
	
КонецПроцедуры // ПриемникПриИзменении()

// Процедура - обработчик события "ПриИзменении" флажка, признака получения их входящих данных.
//
Процедура ПолучитьИзВходящихДанныхПриИзменении(Элемент)

	Если ПолучитьИзВходящихДанных Тогда
		Источник = Справочники.Свойства.ПустаяСсылка();
	КонецЕсли;

	УстановитьСвойстваЭУ();
	
КонецПроцедуры // ПолучитьИзВходящихДанныхПриИзменении()

// Процедура - обработчик события "ПриСменеСтраницы" панели алгоритмов.
//
Процедура ПанельАлгоритмыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	ОбновитьПиктограммыАлгоритмов(мМассивОбработчиков, ЭлементыФормы.ПанельАлгоритмы, ЭлементыФормы);
	
	ЗаполнитьИмяОбработчика(Элемент.ТекущаяСтраница);
	
КонецПроцедуры // ПанельАлгоритмыПриСменеСтраницы()

Процедура КоманднаяПанельФормыСкопироватьОбработчикиВыгрузки(Кнопка)
	
	ВыгрузитьКодОбработчиков(ЭтотОбъект.Владелец.Владелец, Истина, ЭтотОбъект.Ссылка);
	
КонецПроцедуры

Процедура КоманднаяПанельФормыВставитьОбработчики(Кнопка)
	
	ЗагрузитьКодОбработчиков(ЭтотОбъект.Владелец.Владелец, ЭтаФорма, мМассивОбработчиков);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБЩЕГО НАЗНАЧЕНИЯ

// Обновляет содержание надписей "ТипИсточника" и "ТипПриемника".
//
Процедура ОбновитьТипы()

	Если Не Источник.Пустая() Тогда
		ТипИсточника = Источник.ТипыСтрокой;
	Иначе
		ТипИсточника = "";
	КонецЕсли;
	
	Если Не Приемник.Пустая() Тогда
		ТипПриемника = Приемник.ТипыСтрокой;
	Иначе
		ТипПриемника = "";
	КонецЕсли; 
	
КонецПроцедуры // ОбновитьТипы() 

// Устанавливает доступность реквизита "Источник" в зависимости от значения флага "ПолучитьИзВходящихДанных".
//
Процедура УстановитьСвойстваЭУ()

	Если ПолучитьИзВходящихДанных Тогда
		ЭлементыФормы.Источник.Доступность = Ложь;
	Иначе
		ЭлементыФормы.Источник.Доступность = Истина;
	КонецЕсли; 
	
КонецПроцедуры // УстановитьСвойстваЭУ() 

Процедура КоманднаяПанельФормыИнформацияПоОбработчикам(Кнопка)
	
	// вывод информации по обработчикам событий
	ОткрытьОписаниеОбработчиковСобытий("ГруппаСвойств", ЭлементыФормы.ПанельАлгоритмы.ТекущаяСтраница.Имя, ЭтаФорма);
	
КонецПроцедуры

Процедура ЗаполнитьИмяОбработчика(ТекущаяСтраница)
	
	Если ЗначениеЗаполнено(ЭтотОбъект.Источник) Тогда
		Свойство = СокрЛП(ЭтотОбъект.Источник.Наименование);
	ИначеЕсли ЗначениеЗаполнено(ЭтотОбъект.Приемник) Тогда 
		Свойство = СокрЛП(ЭтотОбъект.Приемник.Наименование);
	КонецЕсли;
	
	ИмяСобытия = Сред(ТекущаяСтраница.Имя, 9);
	КодВладельца = СокрЛП(Формат(ЭтотОбъект.Владелец.Код, "ЧГ=0"));
	ДлинаКода = СтрДлина(КодВладельца);
	КодПКС = СокрЛП(Формат(ЭтотОбъект.Код, "ЧГ=0"));
	
	ИмяОбработчика = "ПКГС_[КодВладельца]_[Свойство]_[ИмяСобытия]_[КодПКС]_[ДлинаКода]";
	ИмяОбработчика = СтрЗаменить(ИмяОбработчика, "[КодВладельца]", КодВладельца);
	ИмяОбработчика = СтрЗаменить(ИмяОбработчика, "[Свойство]", Свойство);
	ИмяОбработчика = СтрЗаменить(ИмяОбработчика, "[ИмяСобытия]", ИмяСобытия);
	ИмяОбработчика = СтрЗаменить(ИмяОбработчика, "[КодПКС]", КодПКС);
	ИмяОбработчика = СтрЗаменить(ИмяОбработчика, "[ДлинаКода]", ДлинаКода);
	
	ЭлементыФормы["ИмяОбработчика"+ИмяСобытия].Значение = ИмяОбработчика;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

мМассивОбработчиков = ПолучитьМассивИменОбработчиков("ГруппаСвойств");


////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

//Вспомогательная переменная (массив) для хранения обработчиков
Перем мМассивОбработчиков;

Перем мЭтоНовый;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии()

	Если Не ЭтоНовый() Тогда
		
		ФайлПравилТекущегоПользователя = РаботаСФайлами.ПолучитьИмяФайла(Ссылка, глТекущийПользователь);
		ФайлМодуляОбработкиВыгрузкиТекущегоПользователя = РаботаСФайлами.ПолучитьИмяФайла(Ссылка, глТекущийПользователь, "ФайлМодуля");
		ФайлМодуляОбработкиЗагрузкиТекущегоПользователя = РаботаСФайлами.ПолучитьИмяФайла(Ссылка, глТекущийПользователь, "ФайлМодуляЗагрузки");
		
	Иначе
		
		ВыгружатьПараметрыПоВерсии2_01 = Истина;
		
	КонецЕсли; 
	
	Если НЕ ЭтоПриложение8(ЭтотОбъект.Источник.Приложение) Или НЕ ЭтоПриложение8(ЭтотОбъект.Приемник.Приложение) Тогда
		ЭлементыФормы.КоманднаяПанель1.Кнопки.Удалить(ЭлементыФормы.КоманднаяПанель1.Кнопки.ОтладкаОбработчиков);
		ЭлементыФормы.ПанельРежимСовместимости.Свертка = РежимСверткиЭлементаУправления.Верх;
	КонецЕсли;
	
	ПолучитьАлгоритмыПриОткрытии(ЭтаФорма, ЭтотОбъект, мМассивОбработчиков);
	
	АктивизироватьСтраницуСобытия(ЭтотОбъект, мМассивОбработчиков, ЭлементыФормы.ПанельАлгоритмы, ЭлементыФормы);
	
КонецПроцедуры // ПриОткрытии()

// Процедура - обработчик события "ПередЗаписью" формы.
//
Процедура ПередЗаписью(Отказ)

	УстановитьАлгоритмыПередЗаписью(ЭтаФорма, ЭтотОбъект, мМассивОбработчиков);
	
	Если ПустаяСтрока(Код) Тогда
		
		Код = Новый УникальныйИдентификатор();
		
	КонецЕсли;
	
	мЭтоНовый = ЭтоНовый();
	
КонецПроцедуры // ПередЗаписью()

// Процедура - обработчик события "ПриЗаписи" формы.
//
Процедура ПриЗаписи(Отказ)

	Если мЭтоНовый Тогда
		
		ФормаПравилОбмена = ПолучитьОбщуюФорму("ПравилаОбмена", , 1);
		ФормаПравилОбмена.Конвертация = Ссылка;
		
		Если НЕ ФормаПравилОбмена.Открыта() Тогда
			ФормаПравилОбмена.Открыть();
		Иначе
			ФормаПравилОбмена.Активизировать();
		КонецЕсли;
		
		ФормаПравилОбмена.ОбработатьУстановкуНовойКонвертации();
		
	КонецЕсли;
	
	РаботаСФайлами.УстановитьИмяФайла(Ссылка, глТекущийПользователь, ФайлПравилТекущегоПользователя);
	РаботаСФайлами.УстановитьИмяФайла(Ссылка, глТекущийПользователь, ФайлМодуляОбработкиВыгрузкиТекущегоПользователя, "ФайлМодуля");
	РаботаСФайлами.УстановитьИмяФайла(Ссылка, глТекущийПользователь, ФайлМодуляОбработкиЗагрузкиТекущегоПользователя, "ФайлМодуляЗагрузки");

КонецПроцедуры // ПриЗаписи()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ

// Процедура - обработчик события "НачалоВыбора" поля ввода файла правил.
//
Процедура ФайлПравилТекущегоПользователяНачалоВыбора(Элемент, СтандартнаяОбработка)
	
    РаботаСФайлами.глВыборФайла(Элемент, ,"Файл данных (*.xml)|*.xml|Архивный файл данных (*.zip)|*.zip", , "Выбирете имя файла для сохранения правил");
	
КонецПроцедуры // ФайлПравилТекущегоПользователяНачалоВыбора()

// Процедура - обработчик события "Открытие" поля ввода файла правил.
//
Процедура ФайлПравилТекущегоПользователяОткрытие(Элемент, СтандартнаяОбработка)
	
	РаботаСФайлами.глОткрытьФайл(Элемент.Значение, СтандартнаяОбработка);

КонецПроцедуры // ФайлПравилТекущегоПользователяНачалоВыбора()

// Процедура - обработчик события "НачалоВыбора" поля ввода файла модуля.
//
Процедура ФайлМодуляОбработкиВыгрузкиТекущегоПользователяНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	РаботаСФайлами.глВыборФайла(Элемент,, "Файл модуля (*.txt)|*.txt", "txt", "Выбирете имя файла для сохранения обработки выгрузки");
	
КонецПроцедуры // ФайлМодуляОбработкиВыгрузкиТекущегоПользователяНачалоВыбора()

// Процедура - обработчик события "Открытие" поля ввода файла модуля.
//
Процедура ФайлМодуляОбработкиВыгрузкиТекущегоПользователяОткрытие(Элемент, СтандартнаяОбработка)
	
	РаботаСФайлами.глОткрытьФайл(Элемент.Значение, СтандартнаяОбработка);
	
КонецПроцедуры // ФайлМодуляОбработкиВыгрузкиТекущегоПользователяНачалоВыбора()

Процедура СформироватьНаименованиеНажатие(Элемент)

	Наименование = глНаименованиеКонвертации(ЭтотОбъект);
	
КонецПроцедуры

Процедура КоманднаяПанельПодключаемыеОбработкиСохранитьВФайл(Кнопка)

    Тек = ЭлементыФормы.ПодключаемыеОбработки.ТекущаяСтрока;

	Если Тек = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	ДиалогВыбораФайла =	Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	
	ДиалогВыбораФайла.Фильтр                      =	"Файл обработки (*.epf)|*.epf";
	ДиалогВыбораФайла.Заголовок                   =	"Выберите файл сохранения обработки";
	ДиалогВыбораФайла.ПредварительныйПросмотр     =	Ложь;
	ДиалогВыбораФайла.Расширение                  =	"epf";
	ДиалогВыбораФайла.ИндексФильтра               =	0;
	ДиалогВыбораФайла.ПолноеИмяФайла              =	РаботаСФайлами.ПолучитьИмяФайла(Тек, глТекущийПользователь);
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла =	Ложь;
	
	Если ДиалогВыбораФайла.Выбрать() Тогда
		ИмяФайлаОбработки = ДиалогВыбораФайла.ПолноеИмяФайла;
		Тек.ХранилищеОбработки.Получить().Записать(ИмяФайлаОбработки);
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельПодключаемыеОбработкиЗагрузитьИзФайла(Кнопка)

    Тек = ЭлементыФормы.ПодключаемыеОбработки.ТекущаяСтрока;

	Если Тек = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	ДиалогВыбораФайла =	Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	ДиалогВыбораФайла.Фильтр                      =	"Файл обработки (*.epf)|*.epf";
	ДиалогВыбораФайла.Заголовок                   =	"Выберите файл обработки";
	ДиалогВыбораФайла.ПредварительныйПросмотр     =	Ложь;
	ДиалогВыбораФайла.Расширение                  =	"epf";
	ДиалогВыбораФайла.ИндексФильтра               =	0;
	ДиалогВыбораФайла.ПолноеИмяФайла              =	РаботаСФайлами.ПолучитьИмяФайла(Тек, глТекущийПользователь);
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла =	Истина;
	
	Если ДиалогВыбораФайла.Выбрать() Тогда
		ИмяФайлаОбработки = ДиалогВыбораФайла.ПолноеИмяФайла;
		Файл              = Новый Файл(ИмяФайлаОбработки);
		Если Файл.Существует() Тогда
			Объект                    = Тек.ПолучитьОбъект();
			Объект.ХранилищеОбработки = Новый ХранилищеЗначения(Новый ДвоичныеДанные(ИмяФайлаОбработки), Новый СжатиеДанных(9));
			Объект.Записать();
		КонецЕсли; 
	КонецЕсли;
	
КонецПроцедуры


// Процедура - обработчик события "ПриСменеСтраницы" панели закладок.
//
Процедура ПанельАлгоритмыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	ОбновитьПиктограммыАлгоритмов(мМассивОбработчиков, ЭлементыФормы.ПанельАлгоритмы, ЭлементыФормы);
	
	ЗаполнитьИмяОбработчика(Элемент.ТекущаяСтраница);
	
КонецПроцедуры // ПанельАлгоритмыПриСменеСтраницы()

Процедура ФайлМодуляОбработкиЗагрузкиТекущегоПользователяНачалоВыбора(Элемент, СтандартнаяОбработка)

	РаботаСФайлами.глВыборФайла(Элемент,, "Файл модуля (*.txt)|*.txt", "txt", "Выбирете имя файла для сохранения обработки загрузки");

КонецПроцедуры

Процедура ФайлМодуляОбработкиЗагрузкиТекущегоПользователяОткрытие(Элемент, СтандартнаяОбработка)

	РаботаСФайлами.глОткрытьФайл(Элемент.Значение, СтандартнаяОбработка);

КонецПроцедуры

Процедура НоваяКонфигурацияНажатие(Элемент)
	
	// загружаем описание конфигурации из файла
	Обработка = Обработки.ЗагрузкаСтруктурыМетаданных.Создать();
		
	ФормаОбработки = Обработка.ПолучитьФорму(, ЭлементыФормы.Источник, 1);
	ФормаОбработки.Открыть();
	
КонецПроцедуры

Процедура НоваяКонфигурация1Нажатие(Элемент)
	
	// загружаем описание конфигурации из файла
	Обработка = Обработки.ЗагрузкаСтруктурыМетаданных.Создать();
		
	ФормаОбработки = Обработка.ПолучитьФорму(, ЭлементыФормы.Приемник, 2);
	ФормаОбработки.Открыть();
	
КонецПроцедуры

Процедура КоманднаяПанель1ИнформацияПоОбработчикам(Кнопка)
	
	// вывод информации по обработчикам событий
	ОткрытьОписаниеОбработчиковСобытий("Конвертация", ЭлементыФормы.ПанельАлгоритмы.ТекущаяСтраница.Имя, ЭтаФорма);
	
КонецПроцедуры

Процедура ПараметрыКодПриИзменении(Элемент)
	
	Если ЭлементыФормы.Параметры.ТекущиеДанные = Неопределено Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Если ПустаяСтрока(ЭлементыФормы.Параметры.ТекущиеДанные.Наименование) Тогда
		ЭлементыФормы.Параметры.ТекущиеДанные.Наименование = ЭлементыФормы.Параметры.ТекущиеДанные.Код;
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанель1Проверка(Кнопка)
	
	ОткрытьФормуПроверкиКонвертации(Ссылка, ЭтаФорма);
	
КонецПроцедуры

Процедура КоманднаяПанель1ИзменениеПравил(Кнопка)
	
	ОткрытьФормуИзмененийКонвертации(Ссылка, ЭтаФорма);
	
КонецПроцедуры

Процедура КоманднаяПанель1СравнениеИОбъединениеПравилОбмена(Кнопка)
	
	ОткрытьФормуСравненияИОбъединенияКонвертации(Ссылка, ЭтаФорма);
	
КонецПроцедуры

Процедура КоманднаяПанель1СкопироватьОбработчикиВыгрузки(Кнопка)
	
	ВыгрузитьКодОбработчиков(ЭтотОбъект.Ссылка, Истина, );
	
КонецПроцедуры

Процедура КоманднаяПанель1СкопироватьОбработчикиЗагрузки(Кнопка)
	
	ВыгрузитьКодОбработчиков(ЭтотОбъект.Ссылка, Ложь);
	
КонецПроцедуры

Процедура КоманднаяПанель1ВставитьОбработчики(Кнопка)
	
	ЗагрузитьКодОбработчиков(ЭтотОбъект.Ссылка, ЭтаФорма, мМассивОбработчиков);
	
КонецПроцедуры

Процедура КоманднаяПанель1ПерейтиКПравилам(Кнопка)
	
	ФормаПравилОбмена = ПолучитьОбщуюФорму("ПравилаОбмена", , СправочникОбъект.Ссылка);
	ФормаПравилОбмена.Конвертация = СправочникОбъект.Ссылка;
	ФормаПравилОбмена.Открыть();

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ЗаполнитьИмяОбработчика(ТекущаяСтраница)
	
	ИмяСобытия = Сред(ТекущаяСтраница.Имя, 9);	
	ИмяОбработчика = "Конвертация_[ИмяСобытия]";
	ИмяОбработчика = СтрЗаменить(ИмяОбработчика, "[ИмяСобытия]", ИмяСобытия);
	ЭлементыФормы["ИмяОбработчика"+ИмяСобытия].Значение = ИмяОбработчика;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

мМассивОбработчиков = ПолучитьМассивИменОбработчиков("Конвертация");


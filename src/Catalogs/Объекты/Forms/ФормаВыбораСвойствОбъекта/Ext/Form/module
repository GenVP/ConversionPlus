Перем мРезультатЗакрытияОкна;
Перем мЕстьОграничениеПоТипам;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	// проверка заполнения
	Если ОсновнойОбъект.Пустая() Тогда
		
		Предупреждение("Не указан объект настройки!");
		Отказ = Истина;
	КонецЕсли;
	
	мРезультатЗакрытияОкна = Неопределено;
	
	Если ТипЗнч(ОграничениеВыбораТипа) <> Тип("Массив") Тогда
		ОграничениеВыбораТипа = Новый Массив;
	КонецЕсли;
	
	мЕстьОграничениеПоТипам = ОграничениеВыбораТипа.Количество() <> 0;
	
КонецПроцедуры

// Процедура - обработчик события "ПриОткрытии" формы.
//
Процедура ПриОткрытии()
	
	Заголовок = "Объект: " + Строка(ОсновнойОбъект);
	
	ДеревоСвойствОсновногоОбъекта = ОбщегоНазначенияПовтИсп.ПолноеДеревоСвойствОбъекта(ОсновнойОбъект, ОтображатьТабличныеЧасти);
	
	// позиционируемся в табличном поле на ранее выбранной строке
	ТекущаяСтрока = ДеревоСвойствОсновногоОбъекта.Строки.Найти(НачальноеЗначениеВыбора, "НаименованиеСвойства", Ложь);
	
	Если ТекущаяСтрока <> Неопределено Тогда
		
		ЭлементыФормы.ТабличноеПолеДереваСвойств.ТекущаяСтрока = ТекущаяСтрока;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если  мРезультатЗакрытияОкна = Истина // нажали "ОК"
		И мЕстьОграничениеПоТипам // есть ограничение по типам для выбора
		И ОграничениеВыбораТипа.Найти(ВыбранныйТипСвойства) = Неопределено Тогда // выбрали свойство с типом, который не входит в отбор типов
		
		// выводим предупреждающую надпись с перечислением допустимых типов для выбора
		СтрокаШаблона = "";
		
		Для А = 1 По ОграничениеВыбораТипа.Количество() Цикл
			
			СтрокаШаблона = СтрокаШаблона + ?(ПустаяСтрока(СтрокаШаблона), "", ", ") + "%" + Строка(А);
			
		КонецЦикла;
		
		НСтрока = "Разрешено выбирать только свойства с типом: " + СтрокаШаблона;
		
		СтрокаСообщения = СтроковыеФункции.ПодставитьПараметрыВСтрокуИзМассива(НСтрока, ОграничениеВыбораТипа);
		
		Предупреждение(СтрокаСообщения);
		
		Отказ = Истина;
			
	КонецЕсли;
	
	Если Не Отказ И мРезультатЗакрытияОкна = Истина Тогда
		
		ПолучитьТаблицуСвойствОбъекта();
		
	КонецЕсли;
	
	мРезультатЗакрытияОкна = Неопределено;
	
КонецПроцедуры

Процедура ПриЗакрытии()
	
	// очищаем ограничение типов
	ОграничениеВыбораТипа.Очистить();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ

Процедура ТабличноеПолеДереваСвойствПриАктивизацииСтроки(Элемент)
	
	ПолучитьПолноеНаименованиеВыбранногоСвойства(Элемент.ТекущиеДанные);
	
КонецПроцедуры

Процедура ТабличноеПолеДереваСвойствПередРазворачиванием(Элемент, Строка, Отказ)
	
	Если Строка.ЭтоСсылочныйТип Тогда
		
		НовоеДерево = ОбщегоНазначенияПовтИсп.ПолноеДеревоСвойствОбъекта(Строка.Объект, ОтображатьТабличныеЧасти).Скопировать();
		
		ОбщегоНазначенияПовтИсп.ВставитьДеревоЗначений(НовоеДерево, Строка);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ТабличноеПолеДереваСвойствВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	мРезультатЗакрытияОкна = Истина;
	
	Закрыть(мРезультатЗакрытияОкна);
	
КонецПроцедуры

Процедура ТабличноеПолеДереваСвойствПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если мЕстьОграничениеПоТипам Тогда
		
		Если ОграничениеВыбораТипа.Найти(ДанныеСтроки.Объект) = Неопределено Тогда // тип выбирать нельзя
			
			ОформлениеСтроки.ЦветТекста = ЦветаСтиля.ЦветРамки;
			
		Иначе // можно выбирать тип
			
			ОформлениеСтроки.ЦветФона = ЦветаСтиля.ЦветФонаПодсказки;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ДанныеСтроки.ЭтоТабличнаяЧасть Тогда
		
		ОформлениеСтроки.Ячейки.НаименованиеСвойства.ОтображатьКартинку = Истина;
		ОформлениеСтроки.Ячейки.НаименованиеСвойства.Картинка = БиблиотекаКартинок.ТабличнаяЧасть;
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ КОМАНДНОЙ ПАНЕЛИ ОсновныеДействияФормы

Процедура ОсновныеДействияФормыКнопкаОК(Кнопка)
	
	мРезультатЗакрытияОкна = Истина;
	
	Закрыть(мРезультатЗакрытияОкна);
	
КонецПроцедуры

Процедура ОсновныеДействияФормыКнопкаОтмена(Кнопка)
	
	мРезультатЗакрытияОкна = Ложь;
	
	Закрыть(мРезультатЗакрытияОкна);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ПолучитьПолноеНаименованиеВыбранногоСвойства(Знач ТекущиеДанные)
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВыбранныйТипСвойства = ТекущиеДанные.Объект;
	
	СписокСвойств = Новый СписокЗначений;
	
	// Заполняем список наименованиями свойств.
	// Поднимаемся вверх по иерархии до корневого свойства.
	Пока ТекущиеДанные <> Неопределено Цикл
		
		СписокСвойств.Добавить(ТекущиеДанные.Уровень(), ТекущиеДанные.НаименованиеСвойства);
		
		ТекущиеДанные = ТекущиеДанные.Родитель;
		
	КонецЦикла;
	
	// сортируем список по возрастанию уровня свойства в иерархии дерева свойств
	СписокСвойств.СортироватьПоЗначению(НаправлениеСортировки.Возр);
	
	ВыбранноеСвойствоОбъекта = "";
	
	Для Каждого Элемент ИЗ СписокСвойств Цикл
		
		ВыбранноеСвойствоОбъекта = ВыбранноеСвойствоОбъекта + ?(ПустаяСтрока(ВыбранноеСвойствоОбъекта), "", ".") + Элемент.Представление;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПолучитьТаблицуСвойствОбъекта()
	
	ТекущиеДанные = ЭлементыФормы.ТабличноеПолеДереваСвойств.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаСвойств = Новый ТаблицаЗначений;
	ТаблицаСвойств.Колонки.Добавить("Уровень");
	ТаблицаСвойств.Колонки.Добавить("Наименование");
	ТаблицаСвойств.Колонки.Добавить("Тип");
	ТаблицаСвойств.Колонки.Добавить("Вид");
	
	// Поднимаемся вверх по иерархии до корневого свойства.
	Пока ТекущиеДанные <> Неопределено Цикл
		
		СтрокаТаблицы = ТаблицаСвойств.Добавить();
		СтрокаТаблицы.Уровень      = ТекущиеДанные.Уровень();
		СтрокаТаблицы.Наименование = ТекущиеДанные.НаименованиеСвойства;
		СтрокаТаблицы.Тип          = ТекущиеДанные.НаименованиеТипа;
		СтрокаТаблицы.Вид          = ТекущиеДанные.Вид;
		
		ТекущиеДанные = ТекущиеДанные.Родитель;
		
	КонецЦикла;
	
	// сортируем по возрастанию уровня свойства в иерархии дерева свойств
	ТаблицаСвойств.Сортировать("Уровень Возр");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ИНИЦИАЛИЗАЦИЯ МОДУЛЯ

мЕстьОграничениеПоТипам = Ложь;

Перем мТекстАлгоритма;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ ТаблицаРезультата

Процедура ТаблицаРезультатаПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)

	ОформлениеСтроки.Ячейки["ПКО"].ОтображатьКартинку = Истина;

	Если ДанныеСтроки.ПКО = Неопределено Тогда
		ОформлениеСтроки.Ячейки["ПКО"].ИндексКартинки = 1;
	Иначе
		Если ДанныеСтроки.ПКО.ЭтоГруппа Тогда
			ОформлениеСтроки.Ячейки["ПКО"].ИндексКартинки = 0;
		Иначе
			ОформлениеСтроки.Ячейки["ПКО"].ИндексКартинки = 1;
		КонецЕсли;
	КонецЕсли;

	Если НЕ ДанныеСтроки.ПКО.ЭтоГруппа Тогда
		Если ТипЗнч(ДанныеСтроки.ПВД) = Тип("СправочникСсылка.ПравилаВыгрузкиДанных") Тогда
			ОформлениеСтроки.ЦветТекста = WebЦвета.ЗеленыйЛес;
		Иначе
            ОформлениеСтроки.ЦветФона = WebЦвета.ШелковыйОттенок;
		КонецЕсли;
	Иначе
		ОформлениеСтроки.ЦветТекста = WebЦвета.СветлоГрифельноСерый;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеСтроки.ПВД) <> Тип("Строка") Тогда
		ОформлениеСтроки.Ячейки["ПВД"].ТолькоПросмотр = Истина;
	КонецЕсли;

	Если ДанныеСтроки.Предупреждение Тогда
		ОформлениеСтроки.Ячейки["ПВД"].ЦветТекста = WebЦвета.Красный;
	КонецЕсли;

КонецПроцедуры // ТаблицаРезультатПриВыводеСтроки()

Процедура ТаблицаРезультатаПриНачалеРедактирования(Элемент, НоваяСтрока)

	Элемент.Колонки["ПВД"].ЭлементУправления.КнопкаВыбора = Ложь;

	Если ТипЗнч(Элемент.ТекущаяСтрока.ПВД) = Тип("Строка") Тогда
		Элемент.Колонки["ПКО"].ЭлементУправления.Доступность   = Истина;
		Элемент.Колонки["ПВД"].ЭлементУправления.Доступность   = Истина;
		Элемент.Колонки["ПВД"].ЭлементУправления.КнопкаОчистки = Истина;
	Иначе
		Элемент.Колонки["ПКО"].ЭлементУправления.Доступность   = Ложь;
		Элемент.Колонки["ПВД"].ЭлементУправления.Доступность   = Ложь;
		Элемент.Колонки["ПВД"].ЭлементУправления.КнопкаОчистки = Ложь;
	КонецЕсли;

КонецПроцедуры // ТаблицаРезультатаПриНачалеРедактирования()

Процедура ТаблицаРезультатаПриИзмененииФлажка(Элемент, Колонка)
	
	глУстановитьПометки(Элемент.ТекущаяСтрока, мТекстАлгоритма);

КонецПроцедуры // ТаблицаРезультатаПриИзмененииФлажка()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ ФОРМЫ

Процедура КнопкаВыполнитьНажатие(Элемент)

	СохранитьПравилаВД(ТаблицаРезультат.Строки);
		
	Если ВладелецФормы <> Неопределено Тогда 
		Закрыть();
	КонецЕсли;		
			
КонецПроцедуры // КнопкаВыполнитьНажатие()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

	Если Конвертация.Пустая() Тогда
		СообщитьОбОшибке("Не выбрана конвертация.", Отказ);
	КонецЕсли;

КонецПроцедуры // ПередОткрытием()

Процедура ПриОткрытии()

	ТаблицаРезультат = ВыполнитьСинхронизацию(Конвертация);

	ЭлементыФормы.ТаблицаРезультата.Данные = "ТаблицаРезультат";
	ЭлементыФормы.ТаблицаРезультата.СоздатьКолонки();

	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("Булево"));
	ОписаниеТипов = Новый ОписаниеТипов(МассивТипов);

	ТаблицаРезультат.Колонки.Добавить("Предупреждение", ОписаниеТипов);

	ТабКолонки = ЭлементыФормы.ТаблицаРезультата.Колонки;

	Если ТабКолонки.Количество() Тогда

		ТабКолонки["ПКО"].КартинкиСтрок       = БиблиотекаКартинок.ГруппаИЭлемент;
		ТабКолонки["ПКО"].РежимРедактирования = РежимРедактированияКолонки.Непосредственно;
		ТабКолонки["ПКО"].ДанныеФлажка        = "Пометка";
        ТабКолонки["ПКО"].ТекстШапки          = " Правило конвертации объекта";
        ТабКолонки["ПКО"].ИзменятьВидимость   = Ложь;
		ТабКолонки["ПКО"].Ширина   = 60;
		
		ТабКолонки["Пометка"].Видимость         = Ложь;
		ТабКолонки["Пометка"].ИзменятьВидимость = Ложь;

		ТабКолонки["ПВД"].ТекстШапки        = " Правило выгрузки данных/Имя нового правила выгрузки данных";
		ТабКолонки["ПВД"].ИзменятьВидимость = Ложь;

		Для каждого Строка из ТаблицаРезультат.Строки Цикл
            Строка.Пометка = Истина;
			глУстановитьПометки(Строка, мТекстАлгоритма);
		КонецЦикла;
		
	КонецЕсли;
	
	ТаблицаРезультат.Строки.Сортировать("Пометка Убыв", Истина);
	
КонецПроцедуры // ПриОткрытии()

Процедура ТаблицаРезультатаВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)

	Если ТипЗнч(ВыбраннаяСтрока.ПВД)  = Тип("СправочникСсылка.ПравилаВыгрузкиДанных") Тогда
		СтандартнаяОбработка = Ложь;
		ОткрытьЗначение(Элемент.ТекущаяСтрока.ПВД);
	КонецЕсли;
	
КонецПроцедуры // ТаблицаРезультатаВыбор()

Процедура КоманднаяПанельФормыУстановитьПометки(Кнопка)

	Для каждого Строка из ТаблицаРезультат.Строки Цикл
		Строка.Пометка = 1;
		глУстановитьПометки(Строка, мТекстАлгоритма);
	КонецЦикла;

КонецПроцедуры // КоманднаяПанельФормыУстановитьПометки()

Процедура КоманднаяПанельФормыСнятьПометки(Кнопка)

	Для каждого Строка из ТаблицаРезультат.Строки Цикл
		Строка.Пометка = 0;
		глУстановитьПометки(Строка, мТекстАлгоритма);
	КонецЦикла;
	
КонецПроцедуры // КоманднаяПанельФормыСнятьПометки()

Процедура ОсновныеДействияФормыПомощь(Кнопка)
	
	ПоказатьИнформациюОБыстромОсвоении("ПравилаВыгрузкиДанных");
	
КонецПроцедуры

мТекстАлгоритма = "
|Если ТипЗнч(ТекСтрока.ПВД) = Тип(""СправочникСсылка.ПравилаВыгрузкиДанных"") Тогда
|	Отказ = Истина;
|КонецЕсли;";


Процедура ДанныеРезультатовПоискаПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ТипЗнч(ДанныеСтроки.Информация) <> Тип("Строка") Тогда
		
		ОформлениеСтроки.Ячейки.Информация.ИндексКартинки  = 0;
		
	Иначе 
		
		ЭтоНеСопоставленные = Найти(ДанныеСтроки.Информация, "НЕ СОПОСТАВЛЕННЫЕ ") > 0;
		ЭтоДляСоздания = Найти(ДанныеСтроки.Информация, " ДЛЯ СОЗДАНИЯ") > 0;
		
		Если ЭтоНеСопоставленные Тогда
			ОформлениеСтроки.Ячейки.Информация.ИндексКартинки   = 6;
		ИначеЕсли ЭтоДляСоздания Тогда
			ОформлениеСтроки.Ячейки.Информация.ИндексКартинки   = 7;
		Иначе		
			ОформлениеСтроки.Ячейки.Информация.ИндексКартинки   = 1;
		КонецЕсли;
		
	КонецЕсли;
	
	ОформлениеСтроки.Ячейки.Информация.ОтображатьКартинку = Истина;
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ЭлементыФормы.ДанныеРезультатовПоиска.Колонки.Информация.КартинкиСтрок = БиблиотекаКартинок.ГруппаИЭлемент;
 	
КонецПроцедуры


Процедура ПерейтиКПравиламОбменаПоВыбраннойСтроке(ВыбраннаяСтрока)
	
	Если ВыбраннаяСтрока = Неопределено 
		ИЛИ ТипЗнч(ВыбраннаяСтрока.Информация) = Тип("Строка") Тогда
		
		Возврат;
		
	КонецЕсли;
		
	Попытка
		
		ВладелецФормы.ВладелецФормы.ЭлементыФормы.ПравилаКонвертацииОбъектов.ТекущаяСтрока = ВыбраннаяСтрока.Информация;
		
	Исключение
	КонецПопытки;		
		
КонецПроцедуры


Процедура ДанныеРезультатовПоискаВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПерейтиКПравиламОбменаПоВыбраннойСтроке(ВыбраннаяСтрока);	
	
КонецПроцедуры

Процедура КоманднаяОсновнаяСинхронизацияСвойствОбъектов(Кнопка)
	
	Если ЭлементыФормы.ДанныеРезультатовПоиска.ТекущиеДанные = Неопределено
		ИЛИ ТипЗнч(ЭлементыФормы.ДанныеРезультатовПоиска.ТекущиеДанные.Информация) = Тип("Строка")
		ИЛИ ЭлементыФормы.ДанныеРезультатовПоиска.ТекущиеДанные.Информация.ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	Обработка = Обработки.АвтонастройкаПравилКонвертацииСвойств.Создать();
	Обработка.СоздаватьПравилаКО = Истина;
	Обработка.ПравилоКО = ЭлементыФормы.ДанныеРезультатовПоиска.ТекущиеДанные.Информация;
	ФормаОбработки = Обработка.ПолучитьФорму(,, Обработка.ПравилоКО);
	ФормаОбработки.Открыть();
	
КонецПроцедуры

Процедура КоманднаяОсновнаяСинхронизацияЗначений(Кнопка)
	
	Если ЭлементыФормы.ДанныеРезультатовПоиска.ТекущиеДанные = Неопределено
		ИЛИ ТипЗнч(ЭлементыФормы.ДанныеРезультатовПоиска.ТекущиеДанные.Информация) = Тип("Строка")
		ИЛИ ЭлементыФормы.ДанныеРезультатовПоиска.ТекущиеДанные.Информация.ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	Обработка = Обработки.АвтонастройкаПравилКонвертацииЗначений.Создать();
	Обработка.ПравилоКО = ЭлементыФормы.ДанныеРезультатовПоиска.ТекущиеДанные.Информация;
	ФормаОбработки = Обработка.ПолучитьФорму(,, Обработка.ПравилоКО);
	ФормаОбработки.Открыть();
	
КонецПроцедуры

Процедура КоманднаяОсновнаяОбновить(Кнопка)
	
	ВладелецФормы.ОбновитьДанныеРезультатовПоиска();
	
КонецПроцедуры

Процедура КоманднаяОсновнаяПоказатьПравила(Кнопка)
	
	ПерейтиКПравиламОбменаПоВыбраннойСтроке(ЭлементыФормы.ДанныеРезультатовПоиска.ТекущиеДанные);	
	
КонецПроцедуры

Процедура УдалитьСтрокиДереваСПрефиксомУдаления(СтрокиДерева)
	
	Индекс = СтрокиДерева.Количество() - 1;
	
	Пока Индекс >= 0 Цикл
		
		ТекущаяСтрока = СтрокиДерева.Получить(Индекс);
		
		УровеньДерева = ТекущаяСтрока.Уровень();
		
		Если УровеньДерева >= 3
			И Найти(ТекущаяСтрока.Информация, "Удалить") = 1 Тогда
			
			Если УровеньДерева >= 4 Тогда
				
				// проверим сколько есть на более высоком уровне элементов
				Если СтрокиДерева.Количество() = 1 Тогда
					
					СтрокиДерева.Родитель.Родитель.Строки.Удалить(ТекущаяСтрока.Родитель);
					Возврат;
					
				Иначе
					
					СтрокиДерева.Удалить(ТекущаяСтрока);
					
				КонецЕсли;
				
			Иначе
				
				СтрокиДерева.Удалить(ТекущаяСтрока);
				
			КонецЕсли;
			
		Иначе
		
			Если ТекущаяСтрока.Строки.Количество() > 0 Тогда
				
				УдалитьСтрокиДереваСПрефиксомУдаления(ТекущаяСтрока.Строки);
				
			КонецЕсли;
			
		КонецЕсли;
		
		Индекс = Индекс - 1;
		
	КонецЦикла;	 
	
КонецПроцедуры

Процедура ПометитьСтрокиДляУдаления(СтрокаДляУдаления)
	
	СтрокаДляУдаления.ПодлежитУдалению = Истина;
	
	// родитель строки которую надо удалить
	РодительСтроки = СтрокаДляУдаления.Родитель;	
	
	// если родителя нет то просто удалим и все
	Если РодительСтроки = Неопределено Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Если РодительСтроки.Строки.Найти(Ложь, "ПодлежитУдалению") = Неопределено Тогда
		
		ПометитьСтрокиДляУдаления(РодительСтроки);			
						
	КонецЕсли;
	
КонецПроцедуры

Процедура УдалитьНеИспользуемыеСтрокиДерева(СтрокиДерева)
	
	Индекс = СтрокиДерева.Количество() - 1;
	
	Пока Индекс >= 0 Цикл
		
		ТекущаяСтрока = СтрокиДерева.Получить(Индекс);
			
		Если ТекущаяСтрока.Информация = "ПКС ДЛЯ СОЗДАНИЯ"
			ИЛИ ТекущаяСтрока.Информация = "ПКЗ ДЛЯ СОЗДАНИЯ" Тогда
			
			Если ТекущаяСтрока.Строки.Количество() = 0 Тогда
			
				СтрокиДерева.Удалить(ТекущаяСтрока);
				
				Если СтрокиДерева.Родитель.Строки.Количество() = 0 Тогда
					
					ПометитьСтрокиДляУдаления(СтрокиДерева.Родитель);
					
				КонецЕсли;
				
			КонецЕсли;
			
		Иначе
			
			Если ТекущаяСтрока.Строки.Количество() > 0 Тогда
			
				УдалитьНеИспользуемыеСтрокиДерева(ТекущаяСтрока.Строки);
				
			КонецЕсли;				
										
		КонецЕсли;
		
		Индекс = Индекс - 1;
		
	КонецЦикла;	
	
КонецПроцедуры

Процедура УдалитьСтрокуПомеченныеКУдалению(СтрокиДерева)
	
	Индекс = СтрокиДерева.Количество() - 1;
	
	Пока Индекс >= 0 Цикл
		
		ТекущаяСтрока = СтрокиДерева.Получить(Индекс);
		
		Если ТекущаяСтрока.ПодлежитУдалению Тогда
			
			СтрокиДерева.Удалить(ТекущаяСтрока);
						
		Иначе
			
			УдалитьСтрокуПомеченныеКУдалению(ТекущаяСтрока.Строки);
			
		КонецЕсли;		
		
		Индекс = Индекс - 1;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура КоманднаяОсновнаяДействие(Кнопка)
	
	УдалитьСтрокиДереваСПрефиксомУдаления(ДанныеРезультатовПоиска.Строки);	
	УдалитьНеИспользуемыеСтрокиДерева(ДанныеРезультатовПоиска.Строки);
	УдалитьСтрокуПомеченныеКУдалению(ДанныеРезультатовПоиска.Строки);
	
КонецПроцедуры


Перем мФормаХодаВыполнения;

Процедура ПриОткрытии()
	
	мФормаХодаВыполнения = ПолучитьФорму("ФормаХодаЗагрузкиДанных", ЭтаФорма);
	
	ВосстановитьИнформациюОНастройках();
		
	Состояния = Новый Структура(
		"СостояниеКоличествоОбъектов,
		|СостояниеОбъект,
		|СостояниеКоличествоСвойств,
		|СостояниеСвойство,
		|СостояниеКоличествоЗначений,
		|СостояниеЗначение",
		мФормаХодаВыполнения.ЭлементыФормы.НадписьСостояниеКоличествоОбъектов,
		мФормаХодаВыполнения.ЭлементыФормы.НадписьСостояниеОбъект,
		мФормаХодаВыполнения.ЭлементыФормы.НадписьСостояниеКоличествоСвойств,
		мФормаХодаВыполнения.ЭлементыФормы.НадписьСостояниеСвойство,
		мФормаХодаВыполнения.ЭлементыФормы.НадписьСостояниеКоличествоЗначений,
		мФормаХодаВыполнения.ЭлементыФормы.НадписьСостояниеЗначение);
		
	Если Конфигурация.Пустая() Тогда
		
		НоваяКонфигурация = Истина;
		
	КонецЕсли;
	
	ПереключательКонфигурацияПриИзменении(Неопределено);
	
КонецПроцедуры // ПриОткрытии()

Процедура ИмяФайлаВыгрузкиНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ДиалогВыбораФайла								=	Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	ДиалогВыбораФайла.Фильтр						=	"Файл данных (*.xml)|*.xml";
	ДиалогВыбораФайла.Заголовок						=	"Выберите файл со структурой метаданных";
	ДиалогВыбораФайла.ПредварительныйПросмотр		=	Ложь;
	ДиалогВыбораФайла.Расширение					=	"xml";
	ДиалогВыбораФайла.ИндексФильтра					=	0;
	ДиалогВыбораФайла.ПолноеИмяФайла				=	Элемент.Значение;
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла	=	Истина;
	
	Если ДиалогВыбораФайла.Выбрать() Тогда
		
		Элемент.Значение = ДиалогВыбораФайла.ПолноеИмяФайла;
		
	КонецЕсли;
	
КонецПроцедуры // ИмяФайлаВыгрузкиНачалоВыбора()

Процедура КнопкаВыполнитьНажатие(Элемент)
	
	Если ПустаяСтрока(ИмяФайлаЗагрузки) Тогда
		
		СообщитьОбОшибке("Не указано имя файла для загрузки описания структуры данных");
		Возврат;
		
	КонецЕсли;
	
	Если Конфигурация.Пустая() И НоваяКонфигурация = Ложь Тогда
		
		СообщитьОбОшибке("Не выбрана обновляемая конфигурация");
		Возврат;
		
	КонецЕсли;
	
	мЗагрузитьНовую = НоваяКонфигурация;
	мКонфигурация = Конфигурация;
			
	мФормаХодаВыполнения.Открыть();
	
	РезультатЗагрузки = ВыполнитьЗагрузку();
	
	мФормаХодаВыполнения.Закрыть();
	
	Если РезультатЗагрузки = Ложь Тогда
		
		Предупреждение("Ошибка чтения файла!");
		Возврат;
		
	КонецЕсли;
	
	СохранитьИнформациюОНастройках();
	
	Предупреждение("Загрузка структуры метаданных успешно завершена.",  10, "Загрузка структуры");
	
	Если ЗначениеЗаполнено(мКонфигурация) Тогда
		
		Если КлючУникальности = 1 
			ИЛИ КлючУникальности = 2 Тогда
			
			ВладелецФормы.Значение = мКонфигурация;
			
		Иначе
		
			Форма = мКонфигурация.ПолучитьФорму();
			Если Форма.Открыта() Тогда
				Форма.ТолькоПросмотр = Истина;
			Иначе
				Форма.Открыть();
			КонецЕсли;
			
		КонецЕсли;
		
		Закрыть();
		
	КонецЕсли;
	
КонецПроцедуры // КнопкаВыполнитьНажатие()

Функция ЧтениеЗаголовкаФайла()
	
	ЧтениеXML = Новый ЧтениеXML;
	
	Попытка
	
		ЧтениеXML.ОткрытьФайл(ИмяФайлаЗагрузки);
		
	Исключение
		
		Предупреждение("Ошибка открытия файла.");
		Возврат Неопределено;
		
	КонецПопытки;
	
	ЧтениеXML.Прочитать();
	
	Если ЧтениеXML.Имя = "Конфигурация" И ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
		
	Иначе
		
		Сообщить("Файл не содержит описания конфигурации.");
		
		Возврат Неопределено;
		
	КонецЕсли;
	
	Возврат XMLЗначение(Тип("Строка"), ЧтениеXML.ПолучитьАтрибут("Имя"));
	
КонецФункции // ЧтениеЗаголовкаФайла()

Процедура ПолеВводаКонфигурацияНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	ЭлементыФормы.ПолеВводаКонфигурация.СписокВыбора.Очистить();
	
	Имя = ЧтениеЗаголовкаФайла();
	
	Если Имя <> Неопределено Тогда
		
		Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	Конфигурации.Ссылка
		|ИЗ
		|	Справочник.Конфигурации КАК Конфигурации
		|
		|ГДЕ
		|	Конфигурации.Имя = &Имя И
		|	Конфигурации.ЭтоГруппа = Ложь");
		
		Запрос.УстановитьПараметр("Имя", Имя);
		
		Результат = Запрос.Выполнить();
		
		Если Результат.Пустой() Тогда
			
			Возврат;
			
		КонецЕсли;
		
		Выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			ЭлементыФормы.ПолеВводаКонфигурация.СписокВыбора.Добавить(Выборка.Ссылка, Строка(Выборка.Ссылка) + ?(ПустаяСтрока(Выборка.Ссылка.Версия), "", " (" + Строка(Выборка.Ссылка.Версия) + ")"));
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры // ПолеВводаКонфигурацияНачалоВыбораИзСписка()

Процедура ПолеВводаКонфигурацияПриИзменении(Элемент)
	
	Если Конфигурация.Пустая() Тогда
		
		НоваяКонфигурация = Истина;
		
	КонецЕсли;
	
	Если Не НоваяКонфигурация Тогда
		
		ВосстановитьИнформациюОНастройках();
		
	КонецЕсли;
	
КонецПроцедуры // ПолеВводаКонфигурацияПриИзменении()

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	СохранитьЗначение("ОбработкаЗагрузкиМетаданных.ИмяФайлаЗагрузки", ИмяФайлаЗагрузки);
	
КонецПроцедуры

Процедура СохранитьИнформациюОНастройках()
	
	ТекущаяКонфигурация = ?(НЕ ЗначениеЗаполнено(Конфигурация), мКонфигурация, Конфигурация);
	
	РаботаСФайлами.УстановитьИмяФайла(ТекущаяКонфигурация, глТекущийПользователь, ИмяФайлаЗагрузки);
				
КонецПроцедуры

Процедура ВосстановитьИнформациюОНастройках()
	
	Если НЕ ПустаяСтрока(ИмяФайлаЗагрузки) Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Конфигурация) Тогда
		ИмяФайлаЗагрузки = РаботаСФайлами.ПолучитьИмяФайла(Конфигурация, глТекущийПользователь);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ИмяФайлаЗагрузки) Тогда
		ИмяФайлаЗагрузки = ВосстановитьЗначение("ОбработкаЗагрузкиМетаданных.ИмяФайлаЗагрузки");
	КонецЕсли;
	
КонецПроцедуры

Процедура ПереключательКонфигурацияПриИзменении(Элемент)
	
	ЭлементыФормы.ПолеВводаКонфигурация.Доступность = НЕ НоваяКонфигурация;
	ЭлементыФормы.НадписьКонфигурация.Доступность = НЕ НоваяКонфигурация;
	ЭлементыФормы.ДобавлятьТолькоНовыеОбъектыСвойстваЗначения.Доступность = НЕ НоваяКонфигурация;
	
	Если НоваяКонфигурация Тогда
		Конфигурация = Справочники.Конвертации.ПустаяСсылка();
		ДобавлятьТолькоНовыеОбъектыСвойстваЗначения = Ложь;
	КонецЕсли;	
	
КонецПроцедуры

Процедура ОсновныеДействияФормыПомощь(Кнопка)
	
	ПоказатьИнформациюОБыстромОсвоении("ВыгрузкаИЗагрузкаМетаданных");
	
КонецПроцедуры

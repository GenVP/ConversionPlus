
////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПЕРЕМЕННЫЕ

Перем мДействиеНачалоВыбораИсточник; //Действие при начале выбора источника
Перем мДействиеНачалоВыбораПриемник; //Действие при начале выбора приемника
Перем мДействиеПриИзмененииИсточник; //Действие при изменении источника
Перем мДействиеПриИзмененииПриемник; //Действие при изменении приемника

Перем мИзмененИсточник;              //Флаг, признак изменения источника
Перем мИзмененПриемник;              //Флаг, признак изменения приемника


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ ТаблицаРезультата

Процедура ТаблицаРезультатаВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)

	Если (НЕ Элемент.ТекущаяСтрока.ПравилоКЗ.Пустая()) Тогда
		СтандартнаяОбработка = Ложь;
		ОткрытьЗначение(ВыбраннаяСтрока.ПравилоКЗ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ТаблицаРезультатаПередНачаломИзменения(Элемент, Отказ)

	Если (Элемент.ТекущаяСтрока = Неопределено) Тогда
    	Возврат;
	КонецЕсли;

	Если Элемент.ТекущаяКолонка.Имя = "ПравилоКЗ" Тогда
		Отказ = Ложь;
	ИначеЕсли (Элемент.ТекущаяКолонка.Имя = "ТипИсточника") ИЛИ (Элемент.ТекущаяКолонка.Имя = "ТипПриемника") Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ТаблицаРезультатаПриНачалеРедактирования(Элемент, НоваяСтрока)

	Элемент.Колонки["ТипИсточника"].ЭлементУправления.Доступность = Ложь;
	Элемент.Колонки["ТипПриемника"].ЭлементУправления.Доступность = Ложь;

	Если (НЕ Элемент.ТекущаяСтрока.ПравилоКЗ.Пустая()) Тогда
		Элемент.Колонки["Источник"].ЭлементУправления.Доступность = Ложь;
		Элемент.Колонки["Приемник"].ЭлементУправления.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры // ТаблицаРезультатаПриНачалеРедактирования()

Процедура ТаблицаРезультатаПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)

	Если      мИзмененИсточник Тогда
        Элемент.ТекущаяСтрока.Строки.Очистить();
        СинхронизироватьЗначения(Элемент.ТекущаяСтрока.Строки, ПравилоКО.Источник, ПравилоКО.Приемник, Элемент.ТекущаяСтрока.Источник, Элемент.ТекущаяСтрока.Приемник);
        Элемент.ТекущаяСтрока.Пометка = Истина;
		глУстановитьПометки(Элемент.ТекущаяСтрока, мТекстАлгоритма, Истина);
		мИзмененИсточник = Ложь;
	ИначеЕсли мИзмененПриемник Тогда
		Элемент.ТекущаяСтрока.Строки.Очистить();
        СинхронизироватьЗначения(Элемент.ТекущаяСтрока.Строки, ПравилоКО.Источник, ПравилоКО.Приемник, Элемент.ТекущаяСтрока.Источник, Элемент.ТекущаяСтрока.Приемник);
        Элемент.ТекущаяСтрока.Пометка = Истина;
		глУстановитьПометки(Элемент.ТекущаяСтрока, мТекстАлгоритма, Истина);
		мИзмененПриемник = Ложь;
	КонецЕсли;

КонецПроцедуры

Процедура ТаблицаРезультатаПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)

	Ячейки = ОформлениеСтроки.Ячейки;

	Ячейки["ПравилоКЗ"].ОтображатьКартинку = Истина;

	Если ДанныеСтроки.Строки.Количество() Тогда
		Ячейки["ПравилоКЗ"].ИндексКартинки = 0;
	Иначе
		Ячейки["ПравилоКЗ"].ИндексКартинки = 1;
	КонецЕсли;
	
	ИсточникНеПустой = НЕ ДанныеСтроки.Источник.Пустая();
	ПриемникНеПустой = НЕ ДанныеСтроки.Приемник.Пустая();
	
	Если (ИсточникНеПустой) И (ПриемникНеПустой) Тогда
		Если ДанныеСтроки.ПравилоКЗ.Пустая() Тогда
			ОформлениеСтроки.ЦветФона = WebЦвета.ШелковыйОттенок;
		Иначе
			ОформлениеСтроки.ЦветТекста = WebЦвета.ЗеленыйЛес;
		КонецЕсли;
	Иначе
        Если ДанныеСтроки.ПравилоКЗ.Пустая() Тогда
			ОформлениеСтроки.ЦветТекста = WebЦвета.СветлоГрифельноСерый;
		Иначе
			ОформлениеСтроки.ЦветТекста = WebЦвета.ЗеленыйЛес;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Процедура ТаблицаРезультатаПриИзмененииФлажка(Элемент, Колонка)

	Если Элемент.Имя = "ТаблицаРезультата" Тогда
		глУстановитьПометки(ЭлементыФормы.ТаблицаРезультата.ТекущаяСтрока, мТекстАлгоритма, Истина);
	КонецЕсли;
	
КонецПроцедуры

Процедура НачалоВыбораИсточник(Элемент, СтандартнаяОбработка)

    Если ЭлементыФормы.ТаблицаРезультата.ТекущаяСтрока.Приемник.ЭтоГруппа Тогда
		Элемент.ВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.Группы;
	Иначе
		Элемент.ВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.Элементы;
	КонецЕсли;
	Элемент.ВыборПоВладельцу = ПравилоКО.Источник;
	
КонецПроцедуры

Процедура НачалоВыбораПриемник(Элемент, СтандартнаяОбработка)

    Если ЭлементыФормы.ТаблицаРезультата.ТекущаяСтрока.Источник.ЭтоГруппа Тогда
		Элемент.ВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.Группы;
	Иначе
		Элемент.ВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.Элементы;
	КонецЕсли;
	Элемент.ВыборПоВладельцу = ПравилоКО.Приемник;
	
КонецПроцедуры

Процедура ПриИзмененииИсточник(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	мИзмененИсточник = Истина;
	
КонецПроцедуры

Процедура ПриИзмененииПриемник(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	мИзмененПриемник = Истина;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ ФОРМЫ

Процедура ЗаписатьПравила()
	
	СохранитьПравилаКЗ(ТаблицаРезультат.Строки);

	Для каждого Строка из ЭлементыФормы.ТаблицаРезультата.Значение.Строки Цикл
		Строка.Пометка = Истина;
		глУстановитьПометки(Строка, мТекстАлгоритма, Ложь);
	КонецЦикла;
	
КонецПроцедуры

Процедура НижняяКоманднаяПанельЗаписать(Кнопка)

	ЗаписатьПравила();	

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

	Если ПравилоКО.Пустая() Тогда
		СообщитьОбОшибке("Не Выбрано правило конвертации объекта.", Отказ);
	КонецЕсли;
	
	ОбработатьУстановкуСвойствОтображенияДанных();
	
КонецПроцедуры

Процедура ПриОткрытии()

	Если НЕ ВыполнитьСинхронизацию() Тогда
    	Возврат;
	КонецЕсли;

	ЭтаФорма.Заголовок = ЭтаФорма.Заголовок + " (" + СокрЛП(ПравилоКО.Код) + ")";
	
	ЭлементыФормы.ТаблицаРезультата.Данные = "ТаблицаРезультат";
	ЭлементыФормы.ТаблицаРезультата.СоздатьКолонки();

	Ячейка = ЭлементыФормы.ТаблицаРезультата.Колонки.Источник.ЭлементУправления;

	Ячейка.ВыбиратьТип = Ложь;
    Ячейка.КнопкаОткрытия = Истина;
	Ячейка.ВыборПоВладельцу = ПравилоКО.Источник;
	Ячейка.УстановитьДействие("НачалоВыбора",    мДействиеНачалоВыбораИсточник);
    Ячейка.УстановитьДействие("ОбработкаВыбора", мДействиеПриИзмененииИсточник);

	Ячейка = ЭлементыФормы.ТаблицаРезультата.Колонки.Приемник.ЭлементУправления;

	Ячейка.ВыбиратьТип = Ложь;
    Ячейка.КнопкаОткрытия = Истина;
	Ячейка.ВыборПоВладельцу = ПравилоКО.Приемник;
	Ячейка.УстановитьДействие("НачалоВыбора",    мДействиеНачалоВыбораПриемник);
    Ячейка.УстановитьДействие("ОбработкаВыбора", мДействиеПриИзмененииПриемник);

	Ячейка = ЭлементыФормы.ТаблицаРезультата.Колонки.ПравилоКЗ.ЭлементУправления;
	
	Ячейка.ВыбиратьТип = Ложь;
    Ячейка.КнопкаОткрытия = Истина;

    Колонки  = ЭлементыФормы.ТаблицаРезультата.Колонки;

	Колонки["ПравилоКЗ"].ДанныеФлажка  = "Пометка";
	Колонки["ПравилоКЗ"].КартинкиСтрок = БиблиотекаКартинок.ГруппаИЭлемент;
	
	Колонки["ПравилоКЗ"].ИзменятьВидимость    = Ложь;
    Колонки["Источник"].ИзменятьВидимость     = Ложь;
	Колонки["Приемник"].ИзменятьВидимость     = Ложь;
	Колонки["Пометка"].ИзменятьВидимость      = Ложь;

	Колонки["ПравилоКЗ"].РежимРедактирования    = РежимРедактированияКолонки.Непосредственно;
	
	Колонки["Пометка"].Видимость              = Ложь;
	Колонки["ИсточникНаименование"].Видимость = Ложь;
	Колонки["ИсточникНаименование"].ИзменятьВидимость = Ложь;
	
	Колонки["ТипИсточника"].Видимость = Ложь;
    Колонки["ТипПриемника"].Видимость = Ложь;
	
	Колонки["СинонимИсточника"].Видимость = Ложь;
    Колонки["СинонимПриемника"].Видимость = Ложь;

	Для каждого Строка из ЭлементыФормы.ТаблицаРезультата.Значение.Строки Цикл
		Строка.Пометка = Истина;
		глУстановитьПометки(Строка, мТекстАлгоритма, Ложь);
	КонецЦикла;
	
КонецПроцедуры

Процедура КоманднаяПанельФормыУстановитьПометки(Кнопка)
	
	Для каждого Строка из ТаблицаРезультат.Строки Цикл
		Строка.Пометка = 1;
		глУстановитьПометки(Строка, мТекстАлгоритма, Истина);
	КонецЦикла;
	
КонецПроцедуры // КоманднаяПанельФормыУстановитьПометки()

Процедура КоманднаяПанельФормыСнятьПометки(Кнопка)
	
	Для каждого Строка из ТаблицаРезультат.Строки Цикл
		Строка.Пометка = 0;
		глУстановитьПометки(Строка, мТекстАлгоритма, Истина);
	КонецЦикла;
	
КонецПроцедуры // КоманднаяПанельФормыСнятьПометки()

Процедура НижняяКоманднаяПанельОК(Кнопка)
	
	ЗаписатьПравила();
	Закрыть();
	
КонецПроцедуры

Процедура ОбработатьУстановкуСвойствОтображенияДанных()
	
	ЭлементыФормы.КоманднаяПанельФормы.Кнопки.РежимОтображения.Текст = ?(ОтображатьВсеДанные, "Не сопоставленные", "Все");
	ЭлементыФормы.КоманднаяПанельФормы.Кнопки.РежимОтображения.Пометка = НЕ ОтображатьВсеДанные;
	
КонецПроцедуры

Процедура КоманднаяПанельТаблицыРезультатаРежимОтображения(Кнопка)
	
	ОтображатьВсеДанные = НЕ ОтображатьВсеДанные;
	ОбработатьУстановкуСвойствОтображенияДанных();
	
	ОбновитьДанныеОСинхронизацииЗначений();	
	
КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

мДействиеНачалоВыбораИсточник = Новый Действие("НачалоВыбораИсточник");
мДействиеНачалоВыбораПриемник = Новый Действие("НачалоВыбораПриемник");
мДействиеПриИзмененииИсточник = Новый Действие("ПриИзмененииИсточник");
мДействиеПриИзмененииПриемник = Новый Действие("ПриИзмененииПриемник");

мИзмененИсточник = Ложь;
мИзмененПриемник = Ложь;


Процедура ИмяФайлаПравилОбменаПриИзменении(Элемент)

	РеквизитыКонвертации = ПолучитьРеквизитыКонвертации(Элемент.Значение);

	Если РеквизитыКонвертации.Количество() = 0 Тогда
    	Возврат;
	КонецЕсли;
	
	НайденныйИсточник = Неопределено;
	НайденныйПриемник = Неопределено;

	НайденнаяКонвертация = Справочники.Конвертации.НайтиПоНаименованию(СокрЛП(РеквизитыКонвертации["Наименование"]), Истина);
	Если НайденнаяКонвертация.Пустая() Тогда
		
		ЗагружаемаяКонвертация = СокрЛП(РеквизитыКонвертации["Наименование"]);
		ВариантЗагрузкиКонвертации = 0;
		ЭлементыФормы.Конвертация.КнопкаВыбора   = Ложь;
		ЭлементыФормы.Конвертация.КнопкаОткрытия = Ложь;
		
	Иначе
		
		ЗагружаемаяКонвертация = НайденнаяКонвертация;
		ВариантЗагрузкиКонвертации = 1;
		ЭлементыФормы.Конвертация.КнопкаВыбора   = Истина;
		ЭлементыФормы.Конвертация.КнопкаОткрытия = Истина;
		
		НайденныйИсточник = НайденнаяКонвертация.Источник;
		НайденныйПриемник = НайденнаяКонвертация.Приемник;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(НайденныйИсточник) Тогда
		НайденныйИсточник = Справочники.Конфигурации.НайтиПоРеквизиту("Имя", СокрЛП(РеквизитыКонвертации["Источник"]));
	КонецЕсли;	
		
	Если НайденныйИсточник.Пустая() Тогда
		Источник = СокрЛП(РеквизитыКонвертации["Источник"]);
		НовыйИсточник = Истина;
		ЭлементыФормы.Источник.КнопкаВыбора   = Ложь;
		ЭлементыФормы.Источник.КнопкаОткрытия = Ложь;
	Иначе
		Источник = НайденныйИсточник;
		НовыйИсточник = Ложь;
		ЭлементыФормы.Источник.КнопкаВыбора   = Истина;
		ЭлементыФормы.Источник.КнопкаОткрытия = Истина;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(НайденныйПриемник) Тогда
		НайденныйПриемник = Справочники.Конфигурации.НайтиПоРеквизиту("Имя", СокрЛП(РеквизитыКонвертации["Приемник"]));
	КонецЕсли;
	
	Если НайденныйПриемник.Пустая() Тогда
		Приемник = СокрЛП(РеквизитыКонвертации["Приемник"]);
		НовыйПриемник = Истина;
		ЭлементыФормы.Приемник.КнопкаВыбора   = Ложь;
		ЭлементыФормы.Приемник.КнопкаОткрытия = Ложь;
	Иначе
		Приемник = НайденныйПриемник;
		НовыйПриемник = Ложь;
		ЭлементыФормы.Приемник.КнопкаВыбора   = Истина;
		ЭлементыФормы.Приемник.КнопкаОткрытия = Истина;
	КонецЕсли;
	
	КонфигурацииИсточникаИПриемникаСовпадают = (Приемник = Источник);
	
	ОбновитьДоступностьКонфигурацииПриемника();	
	
	ВариантЗагрузкиКонвертацииПриИзменении(Неопределено);

КонецПроцедуры

Процедура ИмяФайлаПравилОбменаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	Фильтр						=	"Файл правил (*.xml)|*.xml|Архивный файл правил (*.zip)|*.zip";
	Расширение					=	"xml";
	
	РаботаСФайлами.глВыборФайла(Элемент, Истина, Фильтр, Расширение, "Выбирете имя файла с правилами обмена");
	ИмяФайлаПравилОбменаПриИзменении(Элемент);
	
КонецПроцедуры
 
Процедура ОсновныеДействияФормыЗагрузить(Кнопка)

	Если ПустаяСтрока(ИмяФайлаПравилОбмена) Тогда
        Предупреждение("Не выбрано имя файла правил обмена для загрузки.");
		Возврат;
	Иначе
		
		Файл = Новый Файл(ИмяФайлаПравилОбмена);
		Если НЕ Файл.Существует() Тогда
			СообщитьОбОшибке("Не найден файл с именем: " + ИмяФайлаПравилОбмена);
			Возврат;
		КонецЕсли;
		
		Если НЕ Файл.ЭтоФайл() Тогда
			СообщитьОбОшибке("Файл с именем: " + Источник + " является каталогом.");
			Возврат;
		КонецЕсли;
		
	КонецЕсли;

	Если ВариантЗагрузкиКонвертации Тогда
		Если ТипЗнч(ЗагружаемаяКонвертация) <> Тип("СправочникСсылка.Конвертации") Тогда
			Предупреждение("Не выбрана конвертация для обновления");
			Возврат;
		ИначеЕсли ЗагружаемаяКонвертация.Пустая() Тогда
			Предупреждение("Не выбрана конвертация для обновления");
			Возврат;
		КонецЕсли;
	КонецЕсли;

	Если Не НовыйИсточник Тогда
		Если ТипЗнч(Источник) <> Тип("СправочникСсылка.Конфигурации") Тогда
            Предупреждение("Не выбрана конфигурация источник");
			Возврат;
		ИначеЕсли Источник.Пустая() Тогда
            Предупреждение("Не выбрана конфигурация источник");
			Возврат;
		КонецЕсли;
	КонецЕсли;

	Если Не КонфигурацииИсточникаИПриемникаСовпадают Тогда
		
		Если Не НовыйПриемник Тогда
			Если ТипЗнч(Приемник) <> Тип("СправочникСсылка.Конфигурации") Тогда
	            Предупреждение("Не выбрана конфигурация приемник");
				Возврат;
			ИначеЕсли Приемник.Пустая() Тогда
	            Предупреждение("Не выбрана конфигурация приемник");
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;

	ЗагрузитьПравилаОбмена();
	Сохранить(ВариантЗагрузкиКонвертации, НовыйИсточник, НовыйПриемник);

	Если ТипЗнч(ЗагружаемаяКонвертация) = Тип("СправочникСсылка.Конвертации") Тогда
		
		ФормаПравилОбмена = ПолучитьОбщуюФорму("ПравилаОбмена", , 1);
		ФормаПравилОбмена.Конвертация = ЗагружаемаяКонвертация;
		
		Если НЕ ФормаПравилОбмена.Открыта() Тогда
			ФормаПравилОбмена.Открыть();
		Иначе
			ФормаПравилОбмена.Активизировать();
		КонецЕсли;
		
	КонецЕсли;
	
	Предупреждение("Загрузка завершена");
	ЭтаФорма.Закрыть();
	
КонецПроцедуры

Процедура ПриОткрытии()

	Если Не ПустаяСтрока(ИмяФайлаПравилОбмена) Тогда
		ИмяФайлаПравилОбменаПриИзменении(ЭлементыФормы.ИмяФайлаПравилОбмена);
	КонецЕсли;
	
КонецПроцедуры // ПриОткрытии()

Процедура ФлагНовыйИсточникПриИзменении(Элемент)

    Если НовыйИсточник Тогда
		ЭлементыФормы.Источник.КнопкаВыбора   = Ложь;
		ЭлементыФормы.Источник.КнопкаОткрытия = Ложь;
		ЭлементыФормы.Источник.Значение       = ОписаниеТипа("Строка").ПривестиЗначение(СокрЛП(ЭлементыФормы.Источник.Значение));
	Иначе
		ЭлементыФормы.Источник.КнопкаВыбора   = Истина;
		ЭлементыФормы.Источник.КнопкаОткрытия = Истина;
		ЭлементыФормы.Источник.Значение       = ОписаниеТипа("СправочникСсылка.Конфигурации").ПривестиЗначение(Неопределено);
	КонецЕсли; 
	
КонецПроцедуры

Процедура ФлагНовыйПриемникПриИзменении(Элемент)
	
    Если НовыйПриемник Тогда
		ЭлементыФормы.Приемник.КнопкаВыбора   = Ложь;
		ЭлементыФормы.Приемник.КнопкаОткрытия = Ложь;
		ЭлементыФормы.Приемник.Значение       = ОписаниеТипа("Строка").ПривестиЗначение(СокрЛП(ЭлементыФормы.Приемник.Значение));
	Иначе
		ЭлементыФормы.Приемник.КнопкаВыбора   = Истина;
		ЭлементыФормы.Приемник.КнопкаОткрытия = Истина;
		ЭлементыФормы.Приемник.Значение       = ОписаниеТипа("СправочникСсылка.Конфигурации").ПривестиЗначение(Неопределено);
	КонецЕсли; 
	
КонецПроцедуры

Процедура ИмяФайлаПравилОбменаОткрытие(Элемент, СтандартнаяОбработка)

	РаботаСФайлами.глОткрытьФайл(ИмяФайлаПравилОбмена, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ВариантЗагрузкиКонвертацииПриИзменении(Элемент)

	Если ВариантЗагрузкиКонвертации = 0 Тогда
		
		ЭлементыФормы.Конвертация.КнопкаВыбора    = Ложь;
		ЭлементыФормы.Конвертация.КнопкаОткрытия  = Ложь;
		ЭлементыФормы.НадписьКонвертация.Значение = "Наименование новой конвертации:";
		Если ТипЗнч(ЗагружаемаяКонвертация) = Тип("СправочникСсылка.Конвертации") Тогда
			Если ЗагружаемаяКонвертация.Пустая() Тогда
				ЗагружаемаяКонвертация = "";
			Иначе
				ЗагружаемаяКонвертация = ЗагружаемаяКонвертация.Наименование;
			КонецЕсли;
		КонецЕсли;
		СохранитьВерсию = Истина;
		
	Иначе
		
		ЭлементыФормы.Конвертация.КнопкаВыбора    = Истина;
		ЭлементыФормы.Конвертация.КнопкаОткрытия  = Истина;
		ЭлементыФормы.НадписьКонвертация.Значение = "Конвертация:";
		Если ТипЗнч(ЗагружаемаяКонвертация) = Тип("Строка") Тогда
			ЗагружаемаяКонвертация = Справочники.Конвертации.ПустаяСсылка();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура КонвертацияПриИзменении(Элемент)

	Если ТипЗнч(ЗагружаемаяКонвертация) = Тип("СправочникСсылка.Конвертации") Тогда
		Если ЗагружаемаяКонвертация.Пустая() Тогда
			Источник = Справочники.Конфигурации.ПустаяСсылка();
			Приемник = Справочники.Конфигурации.ПустаяСсылка();
		Иначе
			Источник = ЗагружаемаяКонвертация.Источник;
			Приемник = ЗагружаемаяКонвертация.Приемник;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура КонвертацияОчистка(Элемент, СтандартнаяОбработка)

	Если ВариантЗагрузкиКонвертации = 0 Тогда
		ЗагружаемаяКонвертация = "";
	Иначе
		ЗагружаемаяКонвертация = Справочники.Конвертации.ПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьДоступностьКонфигурацииПриемника()
	
	ЭлементыФормы.НадписьПриемник.Доступность = НЕ КонфигурацииИсточникаИПриемникаСовпадают;
	ЭлементыФормы.Приемник.Доступность = НЕ КонфигурацииИсточникаИПриемникаСовпадают;
	ЭлементыФормы.ФлагНовыйПриемник.Доступность = НЕ КонфигурацииИсточникаИПриемникаСовпадают;
	
Конецпроцедуры

Процедура КонфигурацииИсточникаИПриемникаСовпадаютПриИзменении(Элемент)
	
	ОбновитьДоступностьКонфигурацииПриемника();
	
КонецПроцедуры


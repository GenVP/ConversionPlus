
#Если ТолстыйКлиентОбычноеПриложение Тогда

Процедура ОбщаяФормаПравилаОбменаПриОткрытии(ЭтаФорма) Экспорт
	
	КнопкиПодменю = ЭтаФорма.ЭлементыФормы.КоманднаяПанельФормы.Кнопки.ЗапуститьПриложение.Кнопки;
	КнопкиПодменю.Добавить("bnНастройкиГитфлоу", ТипКнопкиКоманднойПанели.Действие,
		НСтр("ru = 'Адаптация для работы с Git...'"), Новый Действие("bnНастройкиГитфлоуНажатие"));
	
КонецПроцедуры

Процедура НастройкиГитфлоуНажатие(ЭтаФорма) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ЭтаФорма.Конвертация) Тогда
		Предупреждение(НСтр("ru = 'Конвертация не записана. Запишите конвертацию и повторите операцию.'"));
		Возврат;
	КонецЕсли;
	
	ФормаНастроек = ПолучитьОбщуюФорму("bnНастройкиГитфлоу");
	ФормаНастроек.Конвертация = ЭтаФорма.Конвертация;
	ФормаНастроек.Открыть();
	
КонецПроцедуры

#КонецЕсли

Функция ПолучитьИзСтрокиТолькоЦифры(ИсходнаяСтрока) Экспорт
	
	КопияСтроки = СокрЛП(ИсходнаяСтрока);
	ДлинаСтроки = СтрДлина(КопияСтроки);
	Результат = "";
	
	Для Сч = 1 По ДлинаСтроки Цикл
		
		Симв = Сред(КопияСтроки, Сч, 1);
		Если Найти("0123456789", Симв) > 0 Тогда
			Результат = Результат + Симв;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ВернутьСтрокуВыгрузки_ДатаОбновления(ИсходнаяДата) Экспорт
	
	Результат = ИсходнаяДата;
	ОкруглениеДатыВыгрузки = bnГитфлоуПовтИсп.ПолучитьЗначениеНастройки("bnОкруглениеДатыВыгрузки");
	
	Если ОкруглениеДатыВыгрузки = 1 Тогда
		Результат = НачалоМинуты(ИсходнаяДата);
	ИначеЕсли ОкруглениеДатыВыгрузки = 2 Тогда
		Результат = НачалоЧаса(ИсходнаяДата);
	ИначеЕсли ОкруглениеДатыВыгрузки = 3 Тогда
		Результат = НачалоДня(ИсходнаяДата);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция НайтиЭлементСправочникаПоКоду(пКод, ВидСправончика = "Конвертации") Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("пКод", пКод);
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаСправочника.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Конвертации КАК ТаблицаСправочника
	|ГДЕ
	|	ТаблицаСправочника.Код = &пКод";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ".Конвертации", "." + ВидСправончика);
	
	Запрос.Текст = ТекстЗапроса;
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		Возврат Выборка.Ссылка;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

Функция НайтиЭлементСправочникаПоУИД(пУникльныйИдентификатор, ВидСправончика = "Конвертации") Экспорт
	
	СпрСсылка = Справочники[ВидСправончика].ПолучитьСсылку(пУникльныйИдентификатор);
	СпрОбъект = СпрСсылка.ПолучитьОбъект();
	
	Если СпрОбъект <> Неопределено Тогда
		Возврат СпрСсылка;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

///////////////////////////////////////////////////////////////////////////////////////////////
// УПРАВЛЕНИЕ ПОРЯДКОМ ВЫГРУЗКИ ОБЪЕКТОВ

Функция ТребуетсяКорректировкаПорядкаОбъектовКонвертации(пКонвертация) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Конвертация", пКонвертация);
	Запрос.Текст = ТекстЗапросаПровертаСбояПорядкаВыгрузки();
	РезультатЗапросаПакет = Запрос.ВыполнитьПакет();
	НеобходимоОбновление = ( НЕ РезультатЗапросаПакет[0].Пустой() ИЛИ НЕ РезультатЗапросаПакет[1].Пустой() );
	
	Возврат НеобходимоОбновление;
	
КонецФункции

Процедура ОбновитьПорядокОбъектовКонвертации(пКонвертация) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Конвертация", пКонвертация);
	
	Запрос.Текст = ТекстЗапроса_ПВД();
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ОбновитьПорядокВыгрузкиОбъектовПоПорядку(пКонвертация, "ПравилаВыгрузкиДанных", "правил выгрузки данных");
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса_ПОД();
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ОбновитьПорядокВыгрузкиОбъектовПоПорядку(пКонвертация, "ПравилаОчисткиДанных", "правил очистки данных");
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса_ПКО();
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ОбновитьПорядокВыгрузкиОбъектовПоПорядку(пКонвертация, "ПравилаКонвертацииОбъектов", "правил конвертации объектов");
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса_ПКЗ();
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ОбновитьПорядокВыгрузкиОбъектовПоПорядкуВладельцу(пКонвертация, "ПравилаКонвертацииЗначений", "правил конвертации значений");
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса_ПКС();
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ОбновитьПорядокВыгрузкиОбъектовПоПорядкуВладельцу(пКонвертация, "ПравилаКонвертацииСвойств", "правил конвертации свойств");
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьПорядокВыгрузкиОбъектовПоПорядку(пКонвертация, ИмяТаблицы, ИмяВСообщении)
	
	//TODO: Дубль кода
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Конвертация", пКонвертация);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаОбъектов.Ссылка
	|ИЗ
	|	Справочник."+ИмяТаблицы+" КАК ТаблицаОбъектов
	|ГДЕ
	|	ТаблицаОбъектов.Владелец = &Конвертация
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОбъектов.Порядок";
	
	Выборка = Запрос.Выполнить().Выбрать();
	ТекНомер = 10;
	Сч = 1;
	Кол = Выборка.Количество();
	Пока Выборка.Следующий() Цикл
		
		#Если НаКлиенте Тогда
		Состояние("Обработка "+ИмяВСообщении+": " + Сч + " из " + Кол);
		#КонецЕсли
		
		ТекОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ТекОбъект.Порядок = ТекНомер;
		ТекОбъект.Записать();
		
		Сч = Сч + 1;
		ТекНомер = ТекНомер + 10;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбновитьПорядокВыгрузкиОбъектовПоПорядкуВладельцу(пКонвертация, ИмяТаблицы, ИмяВСообщении)
	
	//TODO: Дубль кода
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Конвертация", пКонвертация);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаОбъектов.Ссылка
	|ИЗ
	|	Справочник."+ИмяТаблицы+" КАК ТаблицаОбъектов
	|ГДЕ
	|	ТаблицаОбъектов.Владелец.Владелец = &Конвертация
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОбъектов.Порядок";
	
	Выборка = Запрос.Выполнить().Выбрать();
	ТекНомер = 10;
	Сч = 1;
	Кол = Выборка.Количество();
	Пока Выборка.Следующий() Цикл
		
		#Если НаКлиенте Тогда
		Состояние("Обработка "+ИмяВСообщении+": " + Сч + " из " + Кол);
		#КонецЕсли
		
		ТекОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ТекОбъект.Порядок = ТекНомер;
		ТекОбъект.Записать();
		
		Сч = Сч + 1;
		ТекНомер = ТекНомер + 10;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ТекстЗапроса_ПВД() Экспорт
	
	Возврат
	"ВЫБРАТЬ
	|	ТаблицаОбъектов.Порядок,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаОбъектов.Ссылка)
	|ИЗ
	|	Справочник.ПравилаВыгрузкиДанных КАК ТаблицаОбъектов
	|ГДЕ
	|	ТаблицаОбъектов.Владелец = &Конвертация
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаОбъектов.Порядок
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаОбъектов.Ссылка) > 1
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаОбъектов.Ссылка,
	|	0
	|ИЗ
	|	Справочник.ПравилаВыгрузкиДанных КАК ТаблицаОбъектов
	|ГДЕ
	|	ТаблицаОбъектов.Порядок = 0
	|	И ТаблицаОбъектов.Владелец = &Конвертация";
	
КонецФункции

Функция ТекстЗапроса_ПОД() Экспорт
	
	Возврат
	"ВЫБРАТЬ
	|	ТаблицаОбъектов.Порядок,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаОбъектов.Ссылка)
	|ИЗ
	|	Справочник.ПравилаОчисткиДанных КАК ТаблицаОбъектов
	|ГДЕ
	|	ТаблицаОбъектов.Владелец = &Конвертация
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаОбъектов.Порядок
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаОбъектов.Ссылка) > 1
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаОбъектов.Ссылка,
	|	0
	|ИЗ
	|	Справочник.ПравилаОчисткиДанных КАК ТаблицаОбъектов
	|ГДЕ
	|	ТаблицаОбъектов.Порядок = 0
	|	И ТаблицаОбъектов.Владелец = &Конвертация";
	
КонецФункции

Функция ТекстЗапроса_ПКО() Экспорт
	
	Возврат
	"ВЫБРАТЬ
	|	ТаблицаОбъектов.Порядок,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаОбъектов.Ссылка)
	|ИЗ
	|	Справочник.ПравилаКонвертацииОбъектов КАК ТаблицаОбъектов
	|ГДЕ
	|	ТаблицаОбъектов.Владелец = &Конвертация
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаОбъектов.Порядок
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаОбъектов.Ссылка) > 1
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаОбъектов.Ссылка,
	|	0
	|ИЗ
	|	Справочник.ПравилаКонвертацииОбъектов КАК ТаблицаОбъектов
	|ГДЕ
	|	ТаблицаОбъектов.Порядок = 0
	|	И ТаблицаОбъектов.Владелец = &Конвертация";
	
КонецФункции

Функция ТекстЗапроса_ПКЗ() Экспорт
	
	Возврат
	"ВЫБРАТЬ
	|	ТаблицаОбъектов.Владелец,
	|	ТаблицаОбъектов.Порядок,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаОбъектов.Ссылка)
	|ИЗ
	|	Справочник.ПравилаКонвертацииЗначений КАК ТаблицаОбъектов
	|ГДЕ
	|	ТаблицаОбъектов.Владелец.Владелец = &Конвертация
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаОбъектов.Владелец,
	|	ТаблицаОбъектов.Порядок
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаОбъектов.Ссылка) > 1
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаОбъектов.Ссылка,
	|	ТаблицаОбъектов.Ссылка,
	|	0
	|ИЗ
	|	Справочник.ПравилаКонвертацииЗначений КАК ТаблицаОбъектов
	|ГДЕ
	|	ТаблицаОбъектов.Владелец.Владелец = &Конвертация
	|	И ТаблицаОбъектов.Приемник = 0";
	
КонецФункции

Функция ТекстЗапроса_ПКС() Экспорт
	
	Возврат
	"ВЫБРАТЬ
	|	ТаблицаОбъектов.Владелец,
	|	ТаблицаОбъектов.Порядок,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаОбъектов.Ссылка)
	|ИЗ
	|	Справочник.ПравилаКонвертацииСвойств КАК ТаблицаОбъектов
	|ГДЕ
	|	ТаблицаОбъектов.Владелец.Владелец = &Конвертация
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаОбъектов.Владелец,
	|	ТаблицаОбъектов.Порядок
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаОбъектов.Ссылка) > 1
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаОбъектов.Ссылка,
	|	ТаблицаОбъектов.Ссылка,
	|	0
	|ИЗ
	|	Справочник.ПравилаКонвертацииСвойств КАК ТаблицаОбъектов
	|ГДЕ
	|	ТаблицаОбъектов.Владелец.Владелец = &Конвертация
	|	И ТаблицаОбъектов.Владелец.Порядок = 0";
	
КонецФункции

Функция ТекстЗапросаПровертаСбояПорядкаВыгрузки()
	
	// ПВД (порядок)
	// ПОД (порядок)
	// ПКО (порядок)
	// - ПКС (порядок)
	// - ПКЗ (порядок)
	
	Возврат
	"" + ТекстЗапроса_ПВД() + "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|" + ТекстЗапроса_ПОД() + "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|" + ТекстЗапроса_ПКО() + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|" + ТекстЗапроса_ПКЗ() + "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|" + ТекстЗапроса_ПКС();
	
КонецФункции
